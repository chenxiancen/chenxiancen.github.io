<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>问题记录</title>
      <link href="/posts/1ddb9d4e.html"/>
      <url>/posts/1ddb9d4e.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/posts/456cce22.html"/>
      <url>/posts/456cce22.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux常用知识"><a href="#Linux常用知识" class="headerlink" title="Linux常用知识"></a>Linux常用知识</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//强制停止</span>ctrl<span class="token operator">+</span>c<span class="token comment">//退出或者登出账户,不能退出vi/vim</span>ctrl<span class="token operator">+</span>d<span class="token comment">//自动执行上一次匹配前缀的命令，只能适用于短时间的命令</span><span class="token operator">!</span><span class="token operator">+</span>最近使用命令的前缀<span class="token comment">//输入内容区匹配历史命令，回车会执行，键盘左右键可以得到此命令不执行</span>ctrl<span class="token operator">+</span>r 输入内容匹配历史命令<span class="token comment">//光标移动快捷键</span><span class="token number">1.</span>ctrl <span class="token operator">+</span>a<span class="token comment">//跳到命令开头</span><span class="token number">2.</span>ctrl <span class="token operator">+</span>e<span class="token comment">//跳到命令结尾</span><span class="token number">3.</span>ctrl <span class="token operator">+</span>键盘左键<span class="token comment">//向左跳一个单词</span><span class="token number">4.</span>ctrl <span class="token operator">+</span>键盘右键<span class="token comment">//向右跳一个单词</span><span class="token comment">//清屏</span>ctrl<span class="token operator">+</span>l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="finalshell连接虚拟机"><a href="#finalshell连接虚拟机" class="headerlink" title="finalshell连接虚拟机"></a>finalshell连接虚拟机</h2><blockquote><p>注意点：连接Ubuntu可能会遇到问题，<a href="#finalshell连接Ubuntu问题解决方案">解决方案</a></p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.首先打开虚拟机</span><span class="token comment">//2.打开finalshell,点击左上角文件夹图标创建ssh连接</span><span class="token comment">//3.去虚拟机中打开终端查询虚拟机ip(命令如下)</span>ifconfig   <span class="token comment">//查询虚拟机ip</span><span class="token comment">//4.设置虚拟机登录用的用户名以及密码，在填写好连接的虚拟机系统的名称点击确定即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="finalshell连接Ubuntu问题解决方案"><a href="#finalshell连接Ubuntu问题解决方案" class="headerlink" title="finalshell连接Ubuntu问题解决方案"></a>finalshell连接Ubuntu问题解决方案</h2><blockquote><p>注意点：在终端操作过程中可能一些命令需要下载</p><p>使用 sudo apt install +需要下载的命令</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//获取ip地址</span>ifconfig<span class="token comment">//安装连接配件</span>sudo apt<span class="token operator">-</span>get install openssh<span class="token operator">-</span>server<span class="token comment">//重启ssh服务</span>sudo service ssh restart<span class="token comment">//检查ssh服务是否开启</span>sudo ps <span class="token operator">-</span>e <span class="token operator">|</span> grep ssh<span class="token comment">//打开防火墙</span>sudo ufw enable<span class="token comment">//查看防火墙状态（看是否配置的端口能被放行）</span>sudo ufw status<span class="token comment">//若不存在连接的默认端口使用如下命令来放行指定端口连接</span>sudo ufw allow <span class="token operator">+</span>指定端口号<span class="token comment">//检查是否放行</span>sudo ufw status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Finalshell上传下载文件失败解决方案"><a href="#Finalshell上传下载文件失败解决方案" class="headerlink" title="Finalshell上传下载文件失败解决方案"></a>Finalshell上传下载文件失败解决方案</h2><blockquote><ol><li>看连接虚拟机使用的是否是root权限，不是的话更改设置为root权限进入</li><li>看版本是否是最新的版本</li></ol></blockquote><h2 id="权限列标识"><a href="#权限列标识" class="headerlink" title="权限列标识"></a>权限列标识</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.第一列</span>d：表示文件夹<span class="token operator">-</span>：表示文件l：表示软连接<span class="token comment">//所属用户权限</span><span class="token comment">//2.第二列</span>r<span class="token operator">:</span>表示所属用户有查看此文件内容的权限或查看文件夹内容的权限如ls命令<span class="token operator">-</span><span class="token operator">:</span>表示所属用户没有查看此文件的权限<span class="token comment">//3.第三列</span>w<span class="token operator">:</span>表示所属用户有对文件夹创建、删除、改名等操作的权限或者修改文件内容的权限<span class="token operator">-</span><span class="token operator">:</span>表示所属用户没有这些权限<span class="token comment">//4.第四列</span>x<span class="token operator">:</span>表示针对文件夹，可以更改工作目录到此文件夹，即cd进入或将文件作为程序执行的权限<span class="token comment">//所属用户组权限</span><span class="token comment">//5.第五列</span>同所属用户权限的读的权限一致<span class="token comment">//6.第六列</span>同所属用户权限的写的权限一致<span class="token comment">//7.第七列</span>同所属用户执行权限一致<span class="token comment">//其他用户权限</span><span class="token comment">//8.第八列</span>同所属用户权限的读的权限一致<span class="token comment">//9.第九列</span>同所属用户权限的写的权限一致<span class="token comment">//10.第十列</span>同所属用户执行权限一致<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><blockquote><p>用来模糊匹配使用</p><p>使用场景：</p><ol><li><a href="#rm命令">rm命令</a></li><li><a href="#find命令">find命令</a></li></ol></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//示例</span><span class="token number">1.</span> <span class="token operator">*</span>test<span class="token comment">//以test结尾</span><span class="token number">2.</span> test<span class="token operator">*</span><span class="token comment">//以test开头</span><span class="token number">3.</span> <span class="token operator">*</span>test<span class="token operator">*</span><span class="token comment">//包含test的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h2><blockquote><p>|：管道符|将左边命令的结果，作为右边命令的输入</p><p>示例：</p><p>cat hello.txt | grep hello</p><p>cat hello.txt的输出结果（文件内容）</p><p>作为右边grep命令的输入（被过滤的文件）</p></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h3><blockquote><p>查看文件夹内容的命令</p><p>ls [-a -l -h] [Linux路径]</p><p>[-a -l -h]：是选项</p><p>[Linux路径]：可以查看指定路径下的文件</p><p>选项可以组合使用，使用格式举例：</p><p>ls -l -a</p><p>ls -la</p><p>ls -al</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//选项</span><span class="token number">1.</span><span class="token operator">-</span>a：表示all的意思，列出所有文件（包括隐藏的文件和隐藏的文件夹）<span class="token comment">//列出的文件中以.开头的表示是隐藏文件</span><span class="token number">2.</span><span class="token operator">-</span>l：表示以列表或者竖向排列的形式展示内容并且展示更多信息<span class="token number">3.</span><span class="token operator">-</span>h：表示以易于阅读的形式，列出文件的大小，如<span class="token class-name">K</span>、<span class="token class-name">M</span>、<span class="token class-name">G</span><span class="token comment">//-h选项必须搭配-l一起使用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h3><blockquote><p>当Linux终端打开时，默认以Home目录作为当前的工作目录</p><p>cd命令用来更改当前所在的工作目录</p><p>cd [Linux路径]</p><p>注意：</p><p>cd命令无需选项，只有参数，表示要切换到哪个目录下</p><p>cd命令直接执行，不写参数，表示回到用户的HOME目录</p></blockquote><h3 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h3><blockquote><p>pwd命令用来查看当前工作目录</p><p>pwd命令无选项，无参数，字节输入pwd即可</p></blockquote><h3 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h3><blockquote><p>创建文件夹命令</p><p>语法：mkdir [-p] Liux路径</p><p>注意：</p><p>参数必填，表示Linux路径，即要创建的文件夹的路径，相对路径或绝对路径均可</p><p>创建文件夹在HOME目录内是不需要权限的，在其他目录下可能需要权限</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//选项</span><span class="token operator">-</span>p：当需要创建多层级的目录且创建文件的父目录不存在时需要使用此选项<span class="token comment">//比如需要在HOME目录下的test文件夹下创建一个hello文件夹时，test文件夹不存在需要使用-p选项如下：</span>mkdir <span class="token operator">-</span>p <span class="token operator">~</span><span class="token operator">/</span>test<span class="token operator">/</span>hello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="touch、cat和more命令"><a href="#touch、cat和more命令" class="headerlink" title="touch、cat和more命令"></a>touch、cat和more命令</h3><blockquote><p>touch:创建文件</p><p>语法：touch Linux路径</p><p>注意：</p><p>touch命令无选项，参数必填，表示要创建的文件路径，相对、绝对、特殊路径均可使用</p><p>cat:查看文件内容</p><p>语法：cat Linux路径</p><p>注意：</p><p>cat没有选项，只有必填参数，参数表示：被查看的文件路径，相对、绝对、特殊路径符均可使用</p><p>cat只能查看文件内容不能进行修改</p><p>more:查看文件内容</p><p>语法：more Linux路径</p><p>注意：</p><p>同样没有选项，只有必填参数，参数表示：被查看的文件路径，相对、绝对、特殊路径符均可使用</p><p>空格进行翻页，q退出查看</p><p>cat与more不同：</p><p>cat是直接将内容全部显示出来</p><p>more支持翻页，如果文件内容过多，可以一页页展示</p></blockquote><h3 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h3><blockquote><p>cp：复制文件、文件夹</p><p>语法：cp [-r] 参数1 参数2</p><p>注意：</p><p>参数1，Linux路径，表示被复制的文件或文件夹</p><p>参数2，Linux路径，表示要复制去的地方</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//选项</span><span class="token operator">-</span>r ：可选，用于复制文件夹使用，表示递归<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h3><blockquote><p>mv：移动文件、文件夹</p><p>语法：mv 参数1 参数2</p><p>注意：</p><p>参数1，Linux路径，表示被移动的文件或文件夹</p><p>参数2，Linux路径，表示要移动去的地方，如果目标不存在，则进行改名确保目标存在</p></blockquote><h3 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h3><blockquote><p>rm：删除文件、文件夹</p><p>语法：rm [-r -f] 参数1 参数2 …… 参数N</p><p>注意：</p><p>同cp命令一样，-r选项用于删除文件夹</p><p>-f表示force，强制删除（不会弹出提示确认信息）</p><p>​    表示用户删除内容不会弹出提示，只有root管理员用户删除内容会有提示</p><p>​    所以一般用户用不到-f选项</p><p>参数1、参数2、……、参数N表示要删除的文件或者文件夹路径，按照空格隔开</p><p>rm命令可以使用<a href="#通配符">通配符</a>*，用来模糊匹配</p></blockquote><h3 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h3><blockquote><p>which：查找命令的程序文件（查找命令的.exe文件的存放位置）</p><p>语法：which 要查找的命令</p></blockquote><h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3><blockquote><p>find：可以通过find命令去搜索指定的文件</p><p>语法：</p><p>按文件名查找</p><p>find 起始路径 -name “被查找文件名”</p><p>按文件大小查找</p><p>find 起始路径 -size +|- n[kMG]</p><p>+、-：表示大于和小于</p><p>n：表示大小数字</p><p>KMG：表示大小单位，k（小写字母）表示kb，M表示MB，G表示GB</p><p>注意：</p><p>使用root用户可以在整个系统完成搜索</p><p>find命令可以使用<a href="#通配符">通配符</a>进行查找</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//选项</span><span class="token operator">-</span>name<span class="token operator">:</span>按照文件名查找<span class="token operator">-</span>size：按照文件大小查找<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h3><blockquote><p>grep：使用grep命令可以从文件中通过关键字过滤文件行</p><p>语法：grep [-n] 关键字 文件路径</p><p>注意：</p><p>选项-n，可选，表示在结果中显示匹配的行的行号</p><p>参数，关键字，必填，表示过滤的关键字，带有空格或其他特殊符号，建议使用“ ”将关键字包围起来</p><p>参数，文件路径，必填，表示要过滤内容的文件路径，可作为内容输入端口</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">-</span>n：显示匹配到的关键字所在的行的行号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h3><blockquote><p>wc：统计文件的行数、单词数量等</p><p>语法：wc [-c -m -l -w] 文件路径</p><p>注意：</p><p>参数，文件路径，被统计的文件，可作为内容输入端口</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//选项</span><span class="token operator">-</span>c<span class="token operator">:</span>统计bytes数量（字节数量）<span class="token operator">-</span>m：统计字符数量<span class="token operator">-</span>l：统计行数<span class="token operator">-</span>w：统计单词数量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h3><blockquote><p>echo：输出内容</p><p>语法：echo 输出的内容</p><p>注意：</p><p>无需选项，只有一个参数，表示要输出的内容，复杂内容可以用“ ”包围</p><p>带有空格或\等符号，建议使用双引号包围，因为不包围的话，空格后很容易被识别为参数2，尽管echo不受影响，但是要养成习惯</p></blockquote><h3 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h3><blockquote><p>tail：查看文件尾部内容，跟踪文件的最新更改</p><p>语法：tail [-f -num] Linux路径</p><p>注意：</p><p>参数，Linux路径，表示被跟踪的文件路径</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//参数</span><span class="token operator">-</span>f<span class="token operator">:</span>表示持续跟踪，相当于对文件进行修改会实时更新最后添加的内容<span class="token operator">-</span>num<span class="token operator">:</span>表示查看尾部多少行，不填默认<span class="token number">10</span>行，num选项可以直接填写数字如tail <span class="token operator">-</span><span class="token number">5</span> test<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="vi和vim"><a href="#vi和vim" class="headerlink" title="vi和vim"></a>vi和vim</h3><blockquote><p>vi和vim：都是文本编辑器</p><p>语法：vi/vim Linux路径</p><p>不同：</p><p>vim是vi的加强版本，兼容vi所有指令，不仅能编辑文本，而且还具有shell程序编辑的功能，可以不同暗色的字体来辨别语法的正确性，极大的方便了程序的设计和编辑性。</p><p>注意：</p><p>如果文件路径表示的文件不存在，那么此命令会用于编辑新文件</p><p>如果文件路径表示文件存在，那么此命令用于编辑已有文件</p><p>模式：</p><p>命令模式：可以通过输入指令对文件进行修改等一系列操作</p><p>底线模式：在命令模式下输入：即可进入底线模式（不需要敲回车），底线模式主要用来对文件内容进行保存或者退出编辑等操作</p><p>输入模式：通过指定按键进入输入模式，输入模式下可以对文件内容进行修改</p><p>==任何情况下回到命令模式的按键都是是Esc==</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//命令模式指令</span><span class="token number">1.</span> i<span class="token operator">:</span>在当前光标位置进入输入模式，可以对文件内容进行修改<span class="token number">2.</span> a<span class="token operator">:</span>在当前光标位置之后进入输入模式<span class="token number">3.</span> <span class="token class-name">I</span><span class="token operator">:</span>在当前行的开头进入输入模式<span class="token number">4.</span> <span class="token class-name">A</span><span class="token operator">:</span>在当前行的结尾进入输入模式<span class="token number">5.</span> o<span class="token operator">:</span>在当前光标的下一行进入输入模式<span class="token number">6.</span> <span class="token class-name">O</span><span class="token operator">:</span>在当前光标的上一行进入输入模式<span class="token number">7.</span> <span class="token number">0</span><span class="token operator">:</span>数字<span class="token number">0</span>移动光标到当前行的开头<span class="token number">8.</span> $<span class="token operator">:</span>移动光标到当前行的结尾<span class="token number">9.</span> <span class="token function">pageup</span><span class="token punctuation">(</span><span class="token class-name">PgUp</span><span class="token punctuation">)</span><span class="token operator">:</span>向上翻页<span class="token number">10.</span> <span class="token function">pangdown</span><span class="token punctuation">(</span><span class="token class-name">PgDn</span><span class="token punctuation">)</span><span class="token operator">:</span>向下翻页<span class="token number">11.</span> <span class="token operator">/</span><span class="token operator">:</span>进入搜索模式<span class="token number">12.</span> n<span class="token operator">:</span>向下继续搜索<span class="token number">13.</span> <span class="token class-name">N</span><span class="token operator">:</span>向上继续搜索<span class="token number">14.</span> dd<span class="token operator">:</span>删除一行<span class="token number">15.</span> ndd<span class="token operator">:</span>删除当前光标下n行<span class="token number">16.</span> yy<span class="token operator">:</span>复制当前行<span class="token number">17.</span> nyy<span class="token operator">:</span>复制当前光标下n行<span class="token number">18.</span> p<span class="token operator">:</span>粘贴<span class="token number">19.</span> u<span class="token operator">:</span>撤销<span class="token number">20.</span> ctrl<span class="token operator">+</span>r<span class="token operator">:</span>反向撤销修改<span class="token number">21.</span> gg<span class="token operator">:</span>跳到首行<span class="token number">22.</span> <span class="token class-name">G</span><span class="token operator">:</span>跳到行尾<span class="token number">23.</span> dG<span class="token operator">:</span>从当前行开始，向下全部删除<span class="token number">24.</span> dgg<span class="token operator">:</span>从当前行开始，向上全部删除<span class="token number">25.</span> d$<span class="token operator">:</span>从当前光标开始，删除到本行的结尾<span class="token number">25.</span> d0<span class="token operator">:</span>从当前光标开始，删除到本行的开头<span class="token comment">//底线模式指令：</span><span class="token operator">:</span>wq<span class="token operator">:</span>保存退出<span class="token operator">:</span>q<span class="token operator">:</span>仅退出<span class="token operator">:</span>q<span class="token operator">!</span><span class="token operator">:</span>强制退出<span class="token operator">:</span>w<span class="token operator">:</span>仅保存<span class="token operator">:</span>set nu<span class="token operator">:</span>显示行号<span class="token operator">:</span>set paste<span class="token operator">:</span>设置粘贴模式（确保你从文件外部复制的内容保持一致）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="getent命令"><a href="#getent命令" class="headerlink" title="getent命令"></a>getent命令</h3><blockquote><p>getent：查看当前系统中有那些用户</p><p>语法：</p><p>查看系统中用户</p><p>getent passwd</p><p>==输出信息分析：用户名：密码(x)：用户ID：描述信息(无用)：HOME目录:执行终端(默认bash)==</p><p>查看系统中用户组</p><p>getent group</p><p>==输出信息分析：组名称:组认证(显示为x):组ID==</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查看系统中用户</span>getent passwd<span class="token comment">//查看系统中用户组</span>getent group <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h3><blockquote><p>chmod：修改权限控制</p><p>语法：chmod [-R] 权限 文件或文件夹</p><p>注意：</p><p>只有文件、文件夹的所属用户或root用户可以修改</p><p>选项：-R，对文件夹内的全部内容应用同样的操作</p><p>==示例：==</p><ul><li><p>chmod u=rwx,g=rx,o=x hello.txt，将文件权限修改为：rwxr-x—x</p><ul><li>其中：u表示所属用户权限，g表示所属用户组权限，o表示其他用户权限</li></ul></li><li><p>chmod -R u=rwx,g=rx,o=x test，将文件夹test以及文件夹内全部内容权限设置为rwxr-x—x</p></li></ul><p>权限可以用3位数字来表示，第一位数字表示用户权限，第二位表示用户组权限，第三位表示其他用户权限</p><p>==数字细节如下：r记为4，w记为2，x记为1，每个用户权限可以用相加来表示==</p><p>如：所属用户有读和写的权限，则可以用4+2=6，用6来表示所属用户的权限以此类推。</p></blockquote><h3 id="chown命令"><a href="#chown命令" class="headerlink" title="chown命令"></a>chown命令</h3><blockquote><p>chown：修改所属用户、用户组</p><p>语法：chown [-R] [用户] [:] [用户组] 文件或文件夹</p><p>注意：</p><p>==此命令只适用于root用户==</p><p>选项，-R，同chmod，对文件夹内全部内容应用相同规则</p><p>选项，用户，修改所属用户</p><p>选项，用户组，修改所属用户组</p><p>：用于分隔用户和用户组</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//示例</span>chown root hello<span class="token punctuation">.</span>txt<span class="token comment">//将hello.txt所属用户修改为root</span>chown <span class="token operator">:</span>root hello<span class="token punctuation">.</span>txt<span class="token comment">//将hello.txt所属用户组修改为root</span>chown root<span class="token operator">:</span>chen hello<span class="token punctuation">.</span>txt<span class="token comment">//将hello.txt所属用户名修改为root,所属用户组修改为chen</span>chown <span class="token operator">-</span><span class="token class-name">R</span> root test<span class="token comment">//将文件夹test的所属用户修改为root并对文件夹内全部内容应用相同规则</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="systemctl命令"><a href="#systemctl命令" class="headerlink" title="systemctl命令"></a>systemctl命令</h3><blockquote><p>linux系统很多软件（内置或第三方）均支持使用systemctl命令控制：启动、停止、开机自启能够被systemctl管理的软件，一般也称之为：服务</p><p>语法：systemctl start | stop | status | enable | disable 服务名</p><p>注意：</p><p>start：启动</p><p>stop：停止</p><p>status：查看状态</p><p>enable：开启开机自启</p><p>disable：关闭开机自启</p><p>系统内置的服务比较多，比如：</p><p>NetworkManager,主网络服务</p><p>network,副网络服务</p><p>firewalld,防火墙服务</p><p>sshd,ssh服务（FinalShell远程登录Linux使用的就是这个服务）</p><p>==部分软件安装后并不会自动集成到systemctl中，我们可以手动添加。==</p></blockquote><h3 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h3><blockquote><p>ping：检查服务器是否可联通</p><p>语法：ping [-c num] ip或主机名</p><p>注意：</p><ul><li>选项：-c，检查的次数，不使用-c选项，将无限次数持续检查</li><li>参数：ip或主机名，被检查的服务器的ip地址或主机名地址</li></ul></blockquote><h3 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h3><blockquote><p>wget：是非交互式的文件下载器，可以在命令行内下载网络文件</p><p>语法：wget [-b] url</p><p>注意：</p><p>==不论下载是否完成，都会生成要下载的文件，如果未完成一定要及时删除为下载完成的文件==</p><ul><li>选项：-b，可选，后台下载，会将日志写入到当前工作目录的wget-log文件</li><li>参数：url，下载链接</li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//示例： </span><span class="token comment">//下载apache-hadoop3.3.0版本：</span>wget http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>archive<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>org<span class="token operator">/</span>dist<span class="token operator">/</span>hadoop<span class="token operator">/</span>common<span class="token operator">/</span>hadoop<span class="token operator">-</span><span class="token number">3.3</span><span class="token number">.0</span><span class="token operator">/</span>hadoop<span class="token operator">-</span><span class="token number">3.3</span><span class="token number">.0</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span class="token comment">//在后台下载：</span>wget <span class="token operator">-</span>b  http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>archive<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>org<span class="token operator">/</span>dist<span class="token operator">/</span>hadoop<span class="token operator">/</span>common<span class="token operator">/</span>hadoop<span class="token operator">-</span><span class="token number">3.3</span><span class="token number">.0</span><span class="token operator">/</span>hadoop<span class="token operator">-</span><span class="token number">3.3</span><span class="token number">.0</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span class="token comment">//可以通过tail命令监控后台下载进度</span>tail <span class="token operator">-</span>f wget<span class="token operator">-</span>log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="curl命令"><a href="#curl命令" class="headerlink" title="curl命令"></a>curl命令</h3><blockquote><p>curl：可以发送http网络请求，可用于下载文件、获取信息等</p><p>语法：curl [-0] url</p><p>注意：</p><ul><li>选项：-O，用于下载文件，当url是下载链接时，可以使用此选项保存文件</li><li>参数：url，要发起请求的网络地址</li></ul></blockquote><h3 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h3><blockquote><p>ps：通过ps命令查看Linux系统中的进程信息</p><p>语法：ps [-e    -f]</p><p>注意：</p><ul><li>选项：-e，显示出全部的进程</li><li>选项：-f，以完全格式化的形似展示信息（展示全部信息）</li></ul><p>一般来说，固定用法就是：ps -ef列出全部进程的全部信息</p><p>查询信息列表代表含义：</p><ol><li>UID：进程所属的用户ID</li><li>PID：进程的进程号ID</li><li>PPID：进程的父ID（启动此进程的其他进程）</li><li>C：此进程的CPU占用率</li><li>STIME：进程的启动时间</li><li>TTY：启动此进程的终端序号，如显示？，表示非终端启动</li><li>TIME：进程占用CPU时间</li><li>CMD：进程对应的名称或启动路径或启动命令</li></ol><p>==可以配合管道符进行使用更快的找到想要看到的进程==</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//理出全部进程的全部信息</span>ps <span class="token operator">-</span>ef<span class="token comment">//列出关于tail的进程</span>ps <span class="token operator">-</span>ef <span class="token operator">|</span> grep tail<span class="token comment">//关闭进程，-9表示强制关闭进程，不适用此选项会向进程发送信号要求其关闭，但是否关闭看进程自身的处理机制</span>kill <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span> 进程<span class="token constant">ID</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h3><blockquote><p>top：查看CPU、内存使用情况，每5秒刷新一次</p><p>选项：</p><ol><li>-p    只显示某个进程的信息</li><li>-d    设置刷新时间，默认是5s</li><li>-c    显示产生进程的完整命令，默认是进程名</li><li>-n    指定刷新次数，比如top -n 3，刷新输出3次后退出</li><li>-b    以非交互非全屏模式运行，以批次的方式执行top，一般配合-n指定输出几次统计信息，将输出重定向到指定文件，比如 top -b -n 3 &gt; /tmp/top.tmp</li><li>-i    不显示任何闲置（idle）或无用（zombie）的进程</li><li>-u    查找特定用户启动的进程</li></ol><p>信息前5行信息</p><ul><li><p>第一行：</p><p>top:命令名称，当前系统时间，up:启动时间，2 user：2个用户登录，load：1、5、15分钟负载</p></li><li><p>第二行</p><p>Tasks:175 total：175个进程，1 running：1个进程在运行，174 sleeping：174个进程睡眠，0stopped：0个停止进程，0 zombie：0个僵尸进程</p></li><li><p>第三行</p><p>%Cpu(s)：cpu使用率，us：用户cpu使用率，sy：系统cpu使用率，ni：高优先级进程占用cpu时间百分比，id：空闲cpu率，wa：io等待cpu占用率，hi：cpu硬件中断率，si：cpu软件中断率，st：强制等待占用cpu率</p></li><li><p>第四、五行</p><p>Kib Mem：物理内存，total：总量，free：空闲，used：使用，buff/cache：buff和cache占用</p><p>KibSwap：虚拟内存（交换空间），total：总i昂，free：空闲，used：使用，buff/cache：buff和cache占用</p></li></ul></blockquote><h3 id="df命令"><a href="#df命令" class="headerlink" title="df命令"></a>df命令</h3><blockquote><p>df：查看硬盘使用情况</p><p>语法：df [-h]</p><p>注意：</p><ul><li>选项：-h，以更加人性化的单位显示</li></ul></blockquote><h3 id="iostat命令"><a href="#iostat命令" class="headerlink" title="iostat命令"></a>iostat命令</h3><blockquote><p>iostat：查看CPU、磁盘的相关信息</p><p>语法：iostat [-x] [num1] [num2]</p><p>注意：</p><ul><li>选项：-x，显示更多信息</li><li>num1：数字，刷新间隔，num2：数字，刷新几次</li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//显示cpu、磁盘的更多信息，每隔5秒刷新1次，刷新4次</span>iostat <span class="token operator">-</span>x <span class="token number">5</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="sar命令"><a href="#sar命令" class="headerlink" title="sar命令"></a>sar命令</h3><blockquote><p>sar：查看网络的相关统计（sar命令非常父子，这里仅简单用于统计网络）</p><p>固定语法：sar -n DEV num1 num2</p><p>注意：</p><ul><li>选项 -n，查看网络，DEV表示查看网络接口</li><li>num1：刷新间隔（不填就查看一次结束），num2：查看次数（不填无限次数）</li></ul><p>信息解读：</p><ul><li>IFACE本地网卡接口名称</li><li>rxpck/s每秒钟接收数据包</li><li>txpck/s没秒钟发送的数据包</li><li>==rxKB/S每秒钟接收数据包大小，单位为KB==</li><li>==txKB/S每秒钟发送的数据包大小，单位为KB==</li><li>rxcmp/s每秒钟接收的压缩数据包</li><li>txcmp/s每秒钟发送的压缩包</li><li>rxmcst/s每秒钟接收的多播数据包</li></ul></blockquote><h3 id="rz、sz上传和下载命令"><a href="#rz、sz上传和下载命令" class="headerlink" title="rz、sz上传和下载命令"></a>rz、sz上传和下载命令</h3><blockquote><p>==FinalShell可以直接进行拖拽操作，遇到大文件建议直接拖拽==</p><p>上传语法：直接输入rz即可</p><p>下载语法：sz 要下载的文件</p><p>注意：</p><p>文件会自动下载到桌面的：fsdownload文件夹中</p></blockquote><h3 id="tar解压缩命令"><a href="#tar解压缩命令" class="headerlink" title="tar解压缩命令"></a>tar解压缩命令</h3><blockquote><p>tar [-c    -v    -x    -f    -z    -C] 参数1 参数2 … 参数N</p><p>注意：</p><ol><li>-c，创建压缩文件，用于压缩模式</li><li>-v，显示压缩、解压过程，用于查看进度</li><li>-x，解压模式</li><li>-f，要创建的文件，或要解压的文件，==-f选项必须在所有选项中位置处于最后一个==</li><li>-z，gzip模式，不使用-z就是普通的tarball格式，==一般处于选项位第一个==</li><li>-C，选择解压的目的地，用于解压模式，==单独使用，和解压缩所需的其他参数分开</li></ol></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//常用压缩组合</span><span class="token comment">//1.新建压缩文件</span>tar <span class="token operator">-</span>cvf test<span class="token punctuation">.</span>tar <span class="token number">1.</span>txt <span class="token number">2.</span>txt <span class="token number">3.</span>txt<span class="token comment">//将1.txt2.txt3.txt文件压缩成test.tar归档文件</span><span class="token comment">//2.将文件压缩到已有的压缩文件中</span>tar <span class="token operator">-</span>zcvf test<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token number">1.</span>txt <span class="token number">2.</span>txt <span class="token number">3.</span>txt<span class="token comment">//将1.txt2.txt3.txt压缩到test.tar.gz文件中，使用gzip模式</span><span class="token comment">//常用的解压组合</span><span class="token comment">//1.解压至当前目录</span>tar <span class="token operator">-</span>xvf test<span class="token punctuation">.</span>tar<span class="token comment">//2.解压到指定目录</span>tar <span class="token operator">-</span>xvf test<span class="token punctuation">.</span>tar <span class="token operator">-</span><span class="token class-name">C</span> <span class="token operator">/</span>home<span class="token operator">/</span>chen<span class="token comment">//将test.tar文件解压至/home/chen目录下</span><span class="token comment">//3.以Gzip模式解压.gz文件至指定目录</span>tar<span class="token operator">-</span>zxvf test<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span><span class="token class-name">C</span> <span class="token operator">/</span>home<span class="token operator">/</span>chen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="zip压缩命令"><a href="#zip压缩命令" class="headerlink" title="zip压缩命令"></a>zip压缩命令</h3><blockquote><p>zip：压缩文件为zip压缩包</p><p>语法：zip [-r] 参数1 参数2 … 参数N</p><p>注意：</p><ul><li>-r，被压缩的包含文件夹的时候，需要使用-r选项，和rm、cp等命令的-r效果一致</li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//将文件压缩到已有压缩文件中</span>zip test<span class="token punctuation">.</span>zip a<span class="token punctuation">.</span>txt b<span class="token punctuation">.</span>txt c<span class="token punctuation">.</span>txt<span class="token comment">//将a.txtb.txtc.txt压缩到test.zip文件内</span><span class="token comment">//将文件夹压缩和文件压缩到压缩文件中</span>zip test<span class="token punctuation">.</span>zip test chen a<span class="token punctuation">.</span>txt<span class="token comment">//将test和chen文件夹和a.txt文件压缩到test.zip文件内</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="unzip解压命令"><a href="#unzip解压命令" class="headerlink" title="unzip解压命令"></a>unzip解压命令</h3><blockquote><p>unzip：解压zip压缩包</p><p>语法：unzip [-d] 参数</p><p>注意：</p><ul><li>-d，指定要解压去的位置，同tar的-C选项</li><li>参数，被解压的zip压缩包文件</li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//解压到当前目录</span>unzip test<span class="token punctuation">.</span>zip<span class="token comment">//将test.zip解压到当前目录</span><span class="token comment">//解压到指定目录</span>unzip test<span class="token punctuation">.</span>zip <span class="token operator">-</span>d <span class="token operator">/</span>home<span class="token operator">/</span>chen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="scp命令"><a href="#scp命令" class="headerlink" title="scp命令"></a>scp命令</h3><blockquote><p>scp命令是cp命令的升级版，即：ssh cp，通过SSH协议完成文件的复制。</p><p>其主要的功能就是：在不同的Linux服务器之间，通过<code>SSH</code>协议互相传输文件。</p><p>只要知晓服务器的账户和密码（或密钥），即可通过SCP互传文件。</p><p>语法：scp [-r] 参数1 参数2</p><ul><li>-r选项用于复制文件夹使用，如果复制文件夹，必须使用-r</li><li>参数1：本机路径 或 远程目标路径</li><li>参数2：远程目标路径 或 本机路径</li></ul><p>如：<br>scp -r /export/server/jdk root@node2:/export/server/<br>将本机上的jdk文件夹， 以root的身份复制到node2的/export/server/内<br>同SSH登陆一样，账户名可以省略（使用本机当前的同名账户登陆）</p><p>如：<br>scp -r node2:/export/server/jdk /export/server/<br>将远程node2的jdk文件夹，复制到本机的/export/server/内</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># scp命令的高级用法</span><span class="token builtin class-name">cd</span> /export/server<span class="token function">scp</span> <span class="token parameter variable">-r</span> jdk node2:<span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>/    <span class="token comment"># 将本机当前路径的jdk文件夹，复制到node2服务器的同名路径下</span><span class="token function">scp</span> <span class="token parameter variable">-r</span> jdk node2:<span class="token environment constant">$PWD</span>      <span class="token comment"># 将本机当前路径的jdk文件夹，复制到node2服务器的同名路径下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="相对路径和绝对路径"><a href="#相对路径和绝对路径" class="headerlink" title="相对路径和绝对路径"></a>相对路径和绝对路径</h2><blockquote><p>绝对路径：以根目录为起点，描述路径的一种写法，路径描述以/开头</p><p>相对路径：以当前目录为起点，描述路径的一种写法，路径描述无需以/开头</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//特殊路径符</span><span class="token number">1</span>、 <span class="token punctuation">.</span>表示当前目录，比如cd <span class="token punctuation">.</span>/<span class="token class-name">Desktop</span>表示切换到当前目录下的<span class="token class-name">Desktop</span>目录内，于cd <span class="token class-name">Desktop</span>一致<span class="token number">2</span>、 <span class="token punctuation">.</span><span class="token punctuation">.</span>表示上一级目录，比如：cd <span class="token punctuation">.</span><span class="token punctuation">.</span>即可切换到上一级目录，cd <span class="token punctuation">.</span><span class="token punctuation">.</span>/<span class="token punctuation">.</span><span class="token punctuation">.</span> 切换到上二级的目录<span class="token number">3</span>、 <span class="token operator">~</span>表示<span class="token constant">HOME</span>目录，比如：cd <span class="token operator">~</span>即可切换到<span class="token constant">HOME</span>目录或cd <span class="token operator">~</span><span class="token operator">/</span><span class="token class-name">Desktop</span>，切换到<span class="token constant">HOME</span>目录内的<span class="token class-name">Desktop</span>目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h2><blockquote><p>反引号：被反引号（``）包围的内容作为命令去执行</p></blockquote><h2 id="重定向符"><a href="#重定向符" class="headerlink" title="重定向符"></a>重定向符</h2><blockquote><p>“&gt;”：将左侧命令结果，==覆盖==到符号右侧的指定文件中</p><p>“&gt;&gt;”：将左侧命令的结果，==追加==写入到符号右侧的指定的文件中</p><p>示例：</p><p>echo “Hello Linux” &gt;hello.txt</p></blockquote><h2 id="超级管理员"><a href="#超级管理员" class="headerlink" title="超级管理员"></a>超级管理员</h2><blockquote><p>root：超级管理员，具有最大的系统操作权限，普通用户在许多地方的权限是受限的</p><p>举例：</p><p>在根目录下创建文件夹：</p><p>普通用户：无法创建的</p><p>root超级管理员：可以直接创建</p><p>语法：su [-] [用户名]</p><p>注意：</p><p>-：符号是可选的，表示是否在切换用户的同时加载环境变量</p><p>参数：用户名，表示要切换的用户，用户名也可以省略不写，不写默认切换到超级管理员用户</p></blockquote><pre class="line-numbers language-JAVA" data-language="JAVA"><code class="language-JAVA">&#x2F;&#x2F;切换超级管理员的命令su - root&#x2F;&#x2F;退出超级管理员exit&#x2F;ctrl+d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="sudo认证"><a href="#sudo认证" class="headerlink" title="sudo认证"></a>sudo认证</h2><blockquote><p>普通用户想要临时使用超级管理员权限执行命令是需要使用sudo命令但是需要输入密码，当完成sudo认证后则可以直接使用sudo命令，不需要使用密码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.切换超级管理员</span>su <span class="token operator">-</span> root<span class="token comment">//2.修改sudoers内容</span>vim <span class="token operator">/</span>etc<span class="token operator">/</span>sudoers<span class="token comment">//3.在文件最后添加如下内容</span>普通用户名 <span class="token constant">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token constant">ALL</span><span class="token punctuation">)</span><span class="token constant">NOPASSWD</span><span class="token operator">:</span> <span class="token constant">ALL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h2><h3 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h3><blockquote><p>以下命令需要root用户执行</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.创建用户组</span>groupadd 用户组名<span class="token comment">//2.删除用户组</span>groupdel 用户组名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><blockquote><p>以下命令需要root用户执行</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.创建用户</span>useradd <span class="token punctuation">[</span><span class="token operator">-</span>g <span class="token operator">-</span>d<span class="token punctuation">]</span> 用户名<span class="token comment">//选项</span>    <span class="token operator">-</span>g：指定用户的组，不指定<span class="token operator">-</span>g，会创建同名组并自动加入，指定<span class="token operator">-</span>g需要组已经存在，如已存在同名组，必须使用<span class="token operator">-</span>g    <span class="token operator">-</span>d：指定用户<span class="token constant">HOME</span>路径，不指定，<span class="token constant">HOME</span>目录默认在：<span class="token operator">/</span>home<span class="token operator">/</span>用户名<span class="token comment">//2.删除用户</span>userdel <span class="token punctuation">[</span><span class="token operator">-</span>r<span class="token punctuation">]</span> 用户名    <span class="token comment">//选项</span>    <span class="token operator">-</span>r：删除用户的<span class="token constant">HOME</span>目录，不使用<span class="token operator">-</span>r<span class="token punctuation">,</span>删除用户时，<span class="token constant">HOME</span>目录保留<span class="token comment">//3.查看用户所属组</span>id <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span>    <span class="token comment">//选项</span>    参数：用户名，被查看的用户，如果不提供则查看自身<span class="token comment">//4.修改用户所属组</span>usermod <span class="token operator">-</span>aG 用户组 用户名，被指定用户加入指定用户组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="yum命令（centos"><a href="#yum命令（centos" class="headerlink" title="yum命令（centos)"></a>yum命令（centos)</h3><blockquote><p>centos系统的软件安装包的格式为.rpm</p><p>yum：RPM包软件管理器，用于自动化安装Linux软件，并可以自动解决依赖问题</p><p>语法：yum [-y] [install | remove |search] 软件名称</p><p>注意：</p><p>==yum命令需要root权限，可以su切换到root，或者用sudo提权，且yum命令需要联网==</p><ol><li>选项：-y，自动确认，无需手动确认安装或卸载过程</li><li>install：安装</li><li>remove：卸载</li><li>search：搜索</li></ol></blockquote><h3 id="apt命令（Ubuntu）"><a href="#apt命令（Ubuntu）" class="headerlink" title="apt命令（Ubuntu）"></a>apt命令（Ubuntu）</h3><blockquote><p>ubuntu系统的软件安装包格式为.deb</p><p>apt：Ubuntu系统只能装软件使用命令</p><p>语法：apt [-y] [install | remove | search] 软件名称</p><p>注意：</p><p>用法与yum一致，同样需要root权限</p></blockquote><h2 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h2><blockquote><p>软连接：在系统中创建软连接，可以将文件、文件夹链接到其他位置，类似Windows系统中的快捷方式</p><p>语法：ln -s 参数1 参数2</p><p>注意：</p><ul><li>-s选项，创建软连接</li><li>参数1：被链接的文件或文件夹</li><li>参数2：要链接去的目的地</li></ul></blockquote><h2 id="date命令"><a href="#date命令" class="headerlink" title="date命令"></a>date命令</h2><blockquote><p>通过date查看的日期是不准确的，这是因为：系统默认时区非中国的东八区，<a href="#修改时区">解决方案</a></p><p>date：通过date命令可以在命令行中查看系统的时间</p><p>语法：date [-d] [+格式字符串]</p><p>注意：</p><p>==+格式字符串如果有特殊字符如空格的话，用双引号将其整个+格式字符串包裹起来==</p><ul><li><p>-d按照给定的字符串显示日期，一般用于日期计算</p><ul><li>可以和格式话字符串配合使用，其中支持的时间标记为：<ul><li>year年</li><li>Month月</li><li>day天</li><li>hour小时</li><li>minute分钟</li><li>second秒</li></ul></li><li>使用方式举例：date -d “+1 day” +%Y%m%d      #显示后一天的日期</li></ul></li><li><p>格式化字符串：通过特定字符串标记，来控制显示的日期格式</p><ul><li>%Y：年</li><li>%y：年份后两位数字（00~99</li><li>%m：月份（01~12）</li><li>%d：日（01~31）</li><li>%H：小时（00~23)</li><li>%M：分钟（00~60）</li><li>%S：秒（00~60）</li><li>%s：自1970-01-01 00:00:00 UTC 到现在的秒数</li></ul></li></ul></blockquote><h2 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.使用root权限</span>su root<span class="token comment">//删除系统自带的localtime文件</span>rm <span class="token operator">-</span>f <span class="token operator">/</span>etc<span class="token operator">/</span>localtime<span class="token comment">//软连接连接</span>sudo ln <span class="token operator">-</span>s <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>zoneinfo<span class="token operator">/</span><span class="token class-name">Asia</span><span class="token operator">/</span><span class="token class-name">Shanghai</span> <span class="token operator">/</span>etc<span class="token operator">/</span>localtime<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="时间自动校准"><a href="#时间自动校准" class="headerlink" title="时间自动校准"></a>时间自动校准</h2><blockquote><p>当ntpd启动后会定期的帮助我们联网校准系统时间</p><p>也可以<a href="#手动校准">手动校准</a></p></blockquote><h3 id="自动校准"><a href="#自动校准" class="headerlink" title="自动校准"></a>自动校准</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1.安装ntp</span>yum <span class="token operator">-</span>y install ntp<span class="token comment">//开启服务</span>systemctl start ntpd<span class="token comment">//设置开机自启</span>systemctl enable ntpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="手动校准"><a href="#手动校准" class="headerlink" title="手动校准"></a>手动校准</h3><blockquote><p>需要root权限</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java">ntpdate <span class="token operator">-</span>u ntp<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token comment">//通过阿里云提供的服务网址配合ntpdate(安装ntp后会附带这个命令)命令自动校准</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="IP地址和主机名"><a href="#IP地址和主机名" class="headerlink" title="IP地址和主机名"></a>IP地址和主机名</h2><blockquote><p>IP地址：每一台联网的电脑都会有一个地址，用于和其他计算机进行通讯</p><p>ip地址主要有v4和v6两个版本（主要是v4版本）</p><p>IPv4版本的地址格式是：a.b.c.d，其中abcd表示0~255的数字，如192.16888.101就是一个标准的IP地址</p><p>特殊IP：</p><ul><li>127.0.0.1    这个地址用于指代本机</li><li>0.0.0.0<ul><li>可以指代本机</li><li>可以在<a href="#端口">端口</a>绑定中用来确定绑定关系</li><li>==在一些IP地址限制中，表示所有IP的意思==，如放行规则设置为0.0.0.0，表示允许任意IP访问</li></ul></li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查看ip地址</span>ifconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h2><blockquote><p>每一台电脑除了对外联络地址（IP地址）以外还可以有一个名字，称之为主机名，这个是可以自行进行设置的</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查看系统主机名</span>hostname<span class="token comment">//修改主机名（需root），需改结束重新登录FinalShell即可看到主机名</span>hostnamectl set<span class="token operator">-</span>hostname 主机名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><blockquote><p>访问www.baidu.com的流程</p><ol><li>访问www.baidu.com</li><li>首先会检查本地记录（私人地址本）<ul><li>Windows：C:\Windows\System32\drivers\hosts</li><li>Linux：/etc/hosts</li></ul></li><li>若不过本地没有会联网询问公开的DNS服务器是否有记录www.baidu.com的地址</li></ol></blockquote><h2 id="虚拟机固定IP"><a href="#虚拟机固定IP" class="headerlink" title="虚拟机固定IP"></a>虚拟机固定IP</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1. 打开编辑中的虚拟网络编辑器</span><span class="token comment">//2.点击右下角的更改设置按钮</span><span class="token comment">//3.选中名称为VMnet8类型为NAT模式</span><span class="token comment">//4.修改子网IP:192.168.x.0，子网掩码为255.255.255.0</span><span class="token comment">//5.点击NAT设置</span><span class="token comment">//6.修改网关为192.168.X.2</span><span class="token comment">//7.开启虚拟机</span><span class="token comment">//8.使用root权限</span>su root<span class="token comment">//9.修改指定文件内容</span>vi <span class="token operator">/</span>etc<span class="token operator">/</span>sysconfig<span class="token operator">/</span>network<span class="token operator">-</span>scripts<span class="token operator">/</span>ifcfg<span class="token operator">-</span>ens33<span class="token comment">//10.修改内容：需要跟虚拟网络编辑器中匹配</span><span class="token constant">BOOTPROTO</span><span class="token operator">=</span><span class="token string">"static"</span><span class="token constant">IPADDR</span><span class="token operator">=</span><span class="token string">"192.168.X.X"</span><span class="token comment">//输入你想要设置的ip</span><span class="token constant">NETMASK</span><span class="token operator">=</span><span class="token string">"255.255.255.0"</span><span class="token comment">//子网掩码</span><span class="token constant">GATEWAY</span><span class="token operator">=</span><span class="token string">"192.168.X.2"</span><span class="token comment">//网关</span><span class="token constant">DNS1</span><span class="token operator">=</span><span class="token string">"192.168.X.2"</span><span class="token comment">//与网关一致即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ul><li></li></ul></blockquote><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><blockquote><p>端口：是设备与外界通讯交流的出入口。端口可以分为物理端口和虚拟端口两类</p><ul><li>物理端口：又可称之为接口，是可见的端口，如USB接口RJ45网口，HDMI端口等</li><li>虚拟端口：是指计算机内部的端口，是不可见的，用来操作系统和外部进行交互使用的<ul><li>举例：当两台主机想要联通只需要知道ip地址即可，但是当想要锁定计算机上具体程序，确保程序之间沟通则是使用端口。</li></ul></li></ul><p>==IP地址相当于小区地址，在小区内又可以有许多住户（程序），而门牌号（端口）就是各个住户（程序）的联系地址==</p><p>Linux系统是一个超大号小区，可以支持65535个端口，这6万多个端口分为三类使用：</p><ul><li>公认端口：1~1023，通常用于一些系统内置或知名程序的预留，如SSH服务的22端口，HTTPS服务的443端口，非特殊需要，不要占用这个范围的端口</li><li>注册端口：1024~49151，通常可以随意使用，用于松散的绑定一些程序/服务</li><li>动态端口：49152~65535，通常不会固定绑定程序，而是当程序对外进行网络链接时，用于临时使用。<ul><li>举例：当计算机A的微信连接计算机B的微信，A使用的50001即为动态端口，临时找一个端口作为出口，计算机B的微信使用端口5678，即注册端口，长期绑定此端口等待别人连接</li></ul></li></ul></blockquote><h3 id="nmap命令"><a href="#nmap命令" class="headerlink" title="nmap命令"></a>nmap命令</h3><blockquote><p>nmap：扫描ip地址对外暴露的端口</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查看端口占用情况</span>nmap 被查看的ip地址<span class="token comment">//安装nmap</span>yum <span class="token operator">-</span>y install nmap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a>netstat命令</h3><blockquote><p>netstat：查看指定端口的占用情况</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查看指定端口的占用情况</span>netstat <span class="token operator">-</span>anp <span class="token operator">|</span> grep 端口号<span class="token comment">//安装netstat</span>yum <span class="token operator">-</span>y install net<span class="token operator">-</span>tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><h3 id="查看环境变量"><a href="#查看环境变量" class="headerlink" title="查看环境变量"></a>查看环境变量</h3><blockquote><p>一些命令如cd可以在任何地方执行就是因为配置了环境变量，当输入命令点击回车时，系统会优先从环境变量配置的几个文件夹下查找，查找到即可直接拿来执行</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//查看环境变量</span>env <span class="token operator">|</span> grep <span class="token constant">PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="符号"><a href="#符号" class="headerlink" title="$符号"></a>$符号</h3><blockquote><p>$配合echo可以用来取“变量”的值</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//使用echo和$符号打印出PATH变量的值</span>echo $<span class="token constant">PATH</span><span class="token comment">//在输出内容后拼接ABC</span>echo $<span class="token punctuation">&#123;</span><span class="token constant">PATH</span><span class="token punctuation">&#125;</span><span class="token constant">ABC</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自行设置环境变量"><a href="#自行设置环境变量" class="headerlink" title="自行设置环境变量"></a>自行设置环境变量</h3><blockquote><ul><li><p>临时设置：</p><p>语法：export 变量名=变量值</p></li><li><p>永久生效</p><ul><li>针对当前用户生效，配置在当前用户的：~/.bashrc文件中</li><li>针对所有用户生效，配置在系统的：/etc/profile文件中</li><li>并通过语法：souce配置文件，进行立刻生效，或重新登录FinalShell </li></ul></li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//设置临时环境变量</span>export <span class="token constant">MYNAME</span><span class="token operator">=</span>chen<span class="token comment">//设置永久环境变量，以当前用户生效的情况为例</span><span class="token number">1.</span>vi <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>bashrc<span class="token number">2.</span>在最后插入 export <span class="token constant">MYNAME</span><span class="token operator">=</span>chen<span class="token number">3.</span>保存退出后输入source <span class="token punctuation">.</span>bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署MySQL数据库管理系统"><a href="#部署MySQL数据库管理系统" class="headerlink" title="部署MySQL数据库管理系统"></a>部署MySQL数据库管理系统</h2><blockquote><p>主要版本：</p><ul><li>MySQL 5.7版本安装</li><li>MySQL 8.x版本安装</li></ul></blockquote><h3 id="5-7版本MySQL安装配置"><a href="#5-7版本MySQL安装配置" class="headerlink" title="5.7版本MySQL安装配置"></a>5.7版本MySQL安装配置</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li><p>配置yum仓库</p><blockquote><p>由于MySQL并不在CentOS的官方仓库中，所以我们通过下面rpm命令：</p><ul><li>导入MySQL仓库密钥</li><li>配置MySQL的yum仓库</li></ul></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#更新密钥</span><span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://repo.mysql.com/RPM-GPG-KEY-mysql-2022<span class="token comment">#安装Mysql yum库</span><span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> http://repo.mysql.com//mysql57-community-release-el7-7.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用yum安装MySQL</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#yum安装Mysql</span>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> mysql-community-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>启动MySQL并配置开机自启动</p><blockquote><p>MySQL安装完成后，会自动配置名为：mysqld的服务，可以被systemctl所管理</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start mysqld<span class="token comment">#启动</span>systemctl <span class="token builtin class-name">enable</span> mysqld<span class="token comment">#开机自启</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>查看MySQL的运行状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ol><li><p>获取MySQL的初始密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#通过grep命令，在/var/log/mysqld.log文件中，过滤temporary password关键字，得到初始密码</span><span class="token function">cat</span> /var/log/mysqld.log <span class="token operator">|</span> <span class="token function">grep</span> "temporary password“<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>登录MySQL数据库系统</p><blockquote><p>-u，登录的用户，MySQL数据库的管理员用户同Linux一样，是root</p><p>-p，表示使用密码登录</p><p>执行完毕后输入上一步得到的初始密码即可进入MySQL数据库</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#执行</span>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>修改root用户密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#在MySQL控制台内执行</span>ALTER <span class="token environment constant">USER</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> IDENTIFIED BY <span class="token string">'密码'</span><span class="token punctuation">;</span>-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续简单语句如123，abc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>配置root的简单密码</p><blockquote><p>我们可以给root设置简单密码，如123456.</p><p>注意：</p><p>此配置仅仅用于测试学习环境的MySQL，如果是正式使用，请勿设置简单密码</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#如果想要设置简单密码，需要降低Mysql密码的安全级别</span><span class="token builtin class-name">set</span> global <span class="token assign-left variable">validate_password_policy</span><span class="token operator">=</span>LOW<span class="token punctuation">;</span><span class="token comment">#密码安全级别低</span><span class="token builtin class-name">set</span> global <span class="token assign-left variable">validate_password_length</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">#密码成都最低4位即可</span><span class="token comment">#然后就可以用简单密码了</span>ALTER <span class="token environment constant">USER</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span> IDENTIFIED BY <span class="token string">'简单密码'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置root远程登录</p><blockquote><p>默认情况下，root用户是不运行远程登陆的，只允许在MySQL所在的Linux服务器登录MySQL系统</p><p>注意：</p><p>==允许root远程登录会带来安全风险==</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#授权root远程登录</span>grant all privileges on *.* to root@<span class="token string">"IP地址"</span> identified by <span class="token string">'密码'</span> with grant option<span class="token punctuation">;</span><span class="token comment">#IP地址即为允许登录的IP地址，也可以填写%，表示允许任何地址</span><span class="token comment">#密码表示给远程登录独立设置密码，和本地登录的密码可以不同</span><span class="token comment">#刷新权限，生效</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>退出MySQL控制台页面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#退出命令</span><span class="token builtin class-name">exit</span><span class="token comment">#或者通过快捷键退出：ctrl + d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>检查端口</p><blockquote><p>MySQL默认端口3306端口，可以通过端口占用检查MySQL的网络状态</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">3306</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="8-0版本MySQL安装配置"><a href="#8-0版本MySQL安装配置" class="headerlink" title="8.0版本MySQL安装配置"></a>8.0版本MySQL安装配置</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><ol><li><p>配置yum仓库</p><blockquote><p>由于MySQL并不在CentOS的官方仓库中，所以我们通过下面rpm命令：</p><ul><li>导入MySQL仓库密钥</li><li>配置MySQL的yum仓库</li></ul></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#更新密钥</span><span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://repo.mysql.com/RPM-GPG-KEY-mysql-2022<span class="token comment">#安装Mysql yum库</span><span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> http://dev.mysql.com/get/mysql80-community-release-el7-2.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用yum安装MySQL</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#yum安装Mysql</span>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> mysql-community-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>启动MySQL并配置开机自启动</p><blockquote><p>MySQL安装完成后，会自动配置名为：mysqld的服务，可以被systemctl所管理</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start mysqld<span class="token comment">#启动</span>systemctl <span class="token builtin class-name">enable</span> mysqld<span class="token comment">#开机自启</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>查看MySQL的运行状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><ol><li><p>获取MySQL的初始密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#通过grep命令，在/var/log/mysqld.log文件中，过滤temporary password关键字，得到初始密码</span><span class="token function">cat</span> /var/log/mysqld.log <span class="token operator">|</span> <span class="token function">grep</span> "temporary password“<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>登录MySQL数据库系统</p><blockquote><p>-u，登录的用户，MySQL数据库的管理员用户同Linux一样，是root</p><p>-p，表示使用密码登录</p><p>执行完毕后输入上一步得到的初始密码即可进入MySQL数据库</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#执行</span>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>修改root用户密码</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#在MySQL控制台内执行</span><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'密码'</span><span class="token punctuation">;</span><span class="token comment">-- 密码需要符合：大于8位，有大写字母，有特殊符号，不能是连续简单语句如123，abc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>配置root的简单密码</p><blockquote><p>我们可以给root设置简单密码，如123456.</p><p>注意：</p><p>此配置仅仅用于测试学习环境的MySQL，如果是正式使用，请勿设置简单密码</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#如果想要设置简单密码，需要降低Mysql密码的安全级别</span><span class="token keyword">set</span> <span class="token keyword">global</span> validate_password_policy<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">#密码安全级别低</span><span class="token keyword">set</span> <span class="token keyword">global</span> validate_password_length<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">#密码成都最低4位即可</span><span class="token comment">#然后就可以用简单密码了</span><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'密码'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置root远程登录</p><blockquote><p>默认情况下，root用户是不运行远程登陆的，只允许在MySQL所在的Linux服务器登录MySQL系统</p><p>注意：</p><p>==允许root远程登录会带来安全风险==</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#第一次授权root远程登录</span><span class="token keyword">create</span> <span class="token keyword">user</span> <span class="token string">'root'</span><span class="token variable">@'%/IP地址'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'密码'</span>；<span class="token comment">#IP地址即为允许登录的IP地址，也可以填写%，表示允许任何地址</span><span class="token comment">#密码表示给远程登录独立设置密码，和本地登录的密码可以不同</span><span class="token comment">#后续修改密码使用如下SQL命令</span><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'%/IP地址'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'密码'</span>；<span class="token comment">#刷新权限，生效</span>flush <span class="token keyword">privileges</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>退出MySQL控制台页面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#退出命令</span><span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token comment">#或者通过快捷键退出：ctrl + d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>检查端口</p><blockquote><p>MySQL默认端口3306端口，可以通过端口占用检查MySQL的网络状态</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">3306</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="tomcat安装部署"><a href="#tomcat安装部署" class="headerlink" title="tomcat安装部署"></a>tomcat安装部署</h2><blockquote><p>tomcat版本：10.0.2</p><p>JDK版本：8u351或更高</p></blockquote><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><h4 id="安装部署JDK环境"><a href="#安装部署JDK环境" class="headerlink" title="安装部署JDK环境"></a>安装部署JDK环境</h4><ol><li><p>下载JDK软件</p><p><a href="https://www.oracle.com/java/technologies/downloads找到对应版本下载">https://www.oracle.com/java/technologies/downloads找到对应版本下载</a></p></li><li><p>登录Linux系统，切换到root用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>通过FinalShell，上传下载好的JDK安装包<a href="#rz、sz上传和下载命令">解决办法</a></p></li><li><p>创建文件夹，用来部署JDK；将JDK和Tomcat都安装部署到：/export/server内</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>解压缩JDK安装文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> jdk-8u351-linux-x64.tar.gz <span class="token parameter variable">-C</span> /export/server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置JDK软连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/jdk1.8.0_351 /export/server/jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置JAVA_HOME环境变量，以及将$JAVA_HOME/bin文件夹加入PATH环境变量中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编辑/etc/profile文件</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/export/server/jdk<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>生效环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置java执行程序的软链接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#删除系统自带的Java程序</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> /usr/bin/java<span class="token comment">#建立软链接将想要使用的jdk版本指向/usr/bin/java</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/jdk/bin/java /usr/bin/java<span class="token comment">#验证是否可以在随意位置查看版本</span><span class="token function">java</span> <span class="token parameter variable">-version</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="安装部署Tomcat"><a href="#安装部署Tomcat" class="headerlink" title="安装部署Tomcat"></a>安装部署Tomcat</h4><blockquote><p>Tomcat建议使用非root用户安装并启动</p><p>可以创建一个用户：tomcat用以部署</p></blockquote><ol><li><p>首先，放行tomcat需要使用的8080端口的外部访问权限</p><blockquote><p>CenOS系统默认开启防火墙，阻止外部网络流量访问系统内部</p><p>所以如果想要Tomcat可以正常使用，需要对Tomcat默认使用的8080端口进行放行</p><p>放行的2种方式</p><ol><li>关闭防火墙</li><li>配置防火墙规则，放行端口</li></ol></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#方式1：关闭防火墙</span>systemctl stop firewalldsystemctl disable firewalld<span class="token comment">#方式2：放行8080端口的外部访问</span>firewall-cmd --add-port<span class="token operator">=</span><span class="token number">8080</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment">#--add-port=8080/tcp表示放行8080端口的tcp访问，--permanent表示永久生效</span>firewall-cmd <span class="token parameter variable">--reload</span><span class="token comment">#重新载入防火墙规则使其生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>方便起见，建议选择方式1，直接关闭防火墙一劳永逸</p></blockquote></li><li><p>以root用户操作，创建tomcat用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#以root用户操作</span><span class="token function">useradd</span> tomcat<span class="token comment">#可选，为tomcat用户配置密码,避免被外人拿到root最高权限</span><span class="token function">passwd</span> tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下载Tomcat安装包</p><blockquote><p>==下载链接需要自己进入网站复制，进入<a href="https://dlcdn.apache.org/tomcat/找到想要下载的版本复制链接替换==">https://dlcdn.apache.org/tomcat/找到想要下载的版本复制链接替换==</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用tomcat用户操作</span><span class="token function">wget</span> https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz<span class="token comment">#如果出现https相关错误可以使用--no-check-certificate选项,如：ERROR: cannot verify dlcdn.apache.org's certificate, issued by ‘/C=US/O=Let's Encrypt/CN=R3’:Issued certificate has expired.</span><span class="token function">wget</span> --no-check-certificate https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.27/bin/apache-tomcat-10.0.27.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>解压Tomcat安装包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用root用户操作，否则无权限解压到/export/server内，除非修改此文件夹权限首先要先找到文件所在位置</span><span class="token builtin class-name">cd</span> /home/tomcat/<span class="token comment">#然后解压文件到/export/server</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-tomcat-10.0.27.tar.gz <span class="token parameter variable">-C</span> /export/server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建Tomcat软链接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用root用户操作</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-tomcat-10.0.27 /export/server/tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>修改tomcat安装目录权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用root用户操作，同时对软链接和tomcat安装文件夹进行修改，使用通配符*进行匹配</span><span class="token function">chown</span> <span class="token parameter variable">-R</span> tomcat:tomcat /exort/export/server/*tomcat*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>启动到tomcat用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> - tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>启动tomcat</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/export/server/tomcat/bin/startup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><ol><li><p>tomcat启动在8080端口，可以检查是否正常启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="Nginx安装部署"><a href="#Nginx安装部署" class="headerlink" title="Nginx安装部署"></a>Nginx安装部署</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><blockquote><p>需要配置额外的yum仓库，才可以使用yum安装</p><p>安装需要root身份</p></blockquote><ol><li><p>安装yum依赖程序</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>手动添加，nginx的yum仓库</p><p>yum程序使用的仓库配置文件，存放在：==/etc/yum.repo.d内==</p><blockquote><p>通过以下操作，我们手动添加了nginx的yum仓库</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># root执行</span><span class="token comment"># 创建文件使用vim编辑</span><span class="token function">vim</span> /etc/yum.repos.d/nginx.repo<span class="token comment"># 填入如下内容并保存退出</span><span class="token punctuation">[</span>nginx-stable<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>nginx stable repo<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://nginx.org/keys/nginx_signing.key<span class="token assign-left variable">module_hotfixes</span><span class="token operator">=</span>true<span class="token punctuation">[</span>nginx-mainline<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>nginx mainline repo<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://nginx.org/packages/mainline/centos/<span class="token variable">$releasever</span>/<span class="token variable">$basearch</span>/<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://nginx.org/keys/nginx_signing.key<span class="token assign-left variable">module_hotfixes</span><span class="token operator">=</span>true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通过yum安装最新稳定版的nginx</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># nginx自动注册了systemctl系统服务</span>systemctl start nginx<span class="token comment"># 启动</span>systemctl stop nginx<span class="token comment"># 停止</span>systemctl status nginx<span class="token comment"># 运行状态</span>systemctl <span class="token builtin class-name">enable</span> nginx<span class="token comment"># 开机自启</span>systemctl disable nginx<span class="token comment"># 关闭开机自启</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置防火墙放行</p><blockquote><p>nginx默认绑定80端口，可根据tomcat中防火墙放行方式自行配置</p></blockquote></li><li><p>启动后浏览器输入Linux服务器的IP地址或主机名可访问</p><blockquote><p>访问方式：<a href="http://192.168.88.128">http://192.168.88.128</a></p><p>==80端口是访问网站的默认端口，所以后面无需跟随端口号==</p></blockquote></li></ol><h2 id="RabbitMQ安装部署"><a href="#RabbitMQ安装部署" class="headerlink" title="RabbitMQ安装部署"></a>RabbitMQ安装部署</h2><h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><blockquote><p>rabbitmq在yum仓库中的版本较老，所以需要手动构建yum仓库</p></blockquote><ol><li><p>准备yum仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行</span><span class="token comment">#1.主备gpgkey密钥</span><span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://packagecloud.io/rabbitmq/erlang/gpgkey<span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey<span class="token comment">#2.准备仓库文件</span><span class="token function">vim</span> /etc/yum.repos.d/rabbitmq.repo<span class="token comment">#填写如下内容</span><span class="token comment">##</span><span class="token comment">## Zero dependency Erlang</span><span class="token comment">##</span><span class="token punctuation">[</span>rabbitmq_erlang<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_erlang<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/el/7/<span class="token variable">$basearch</span><span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment"># PackageCloud&amp;apos;s repository key and RabbitMQ package signing key</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/gpgkey       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">[</span>rabbitmq_erlang-source<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_erlang-source<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/el/7/SRPMS<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment"># PackageCloud&amp;apos;s repository key and RabbitMQ package signing key</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/erlang/gpgkey       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span><span class="token comment">##</span><span class="token comment">## RabbitMQ server</span><span class="token comment">##</span><span class="token punctuation">[</span>rabbitmq_server<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_server<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/<span class="token variable">$basearch</span><span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment"># PackageCloud&amp;apos;s repository key and RabbitMQ package signing key</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey       https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">[</span>rabbitmq_server-source<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>rabbitmq_server-source<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/el/7/SRPMS<span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey<span class="token assign-left variable">sslverify</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">sslcacert</span><span class="token operator">=</span>/etc/pki/tls/certs/ca-bundle.crt<span class="token assign-left variable">metadata_expire</span><span class="token operator">=</span><span class="token number">300</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>安装RabbitMQ</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行安装erlang和rabbitmq</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> erlang rabbitmq-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># root执行</span><span class="token comment"># 使用systemctl管控，服务名：rabbitmq-server</span>systemctl <span class="token builtin class-name">enable</span> rabbitmq-server<span class="token comment"># 开机自启</span>systemctl disable rabbitmq-server<span class="token comment"># 关闭开机自启</span>systemctl start rabbitmq-server<span class="token comment"># 启动</span>systemctl stop rabbitmq-server<span class="token comment"># 关闭</span>systemctl status rabbitmq-server<span class="token comment"># 查看状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>放行防火墙，RabbitMQ使用5672、15672、25672这3个端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 方式1（推荐），关闭防火墙</span>systemctl stop firewalld<span class="token comment"># 关闭</span>systemctl disable firewalld<span class="token comment"># 关闭开机自启</span><span class="token comment"># 方式2，放行5672 25672端口</span>firewall-cmd --add-port<span class="token operator">=</span><span class="token number">5672</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment"># 放行tcp规则下的5672端口，永久生效</span>firewall-cmd --add-port<span class="token operator">=</span><span class="token number">15672</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment"># 放行tcp规则下的15672端口，永久生效</span>firewall-cmd --add-port<span class="token operator">=</span><span class="token number">25672</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment"># 放行tcp规则下的25672端口，永久生效</span>firewall-cmd <span class="token parameter variable">--reload</span><span class="token comment"># 重新加载防火墙规则</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动RabbitMQ的WEB管理控制台</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rabbitmq-plugins <span class="token builtin class-name">enable</span> rabbitmq_management<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加admin用户，并赋予权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rabbitmqctl add_user admin <span class="token string">'12345'</span><span class="token punctuation">;</span><span class="token comment">#配置用户及密码密码</span>rabbitmqctl set_permissions <span class="token parameter variable">-p</span> <span class="token string">"/"</span> <span class="token string">"admin"</span> <span class="token string">".*"</span> <span class="token string">".*"</span> <span class="token string">".*"</span><span class="token comment">#配置权限，此时是最大权限</span>rabbitmqctl set_user_tags admin administrator<span class="token comment">#设置标签</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>浏览器打开管理控制台</p><blockquote><p><a href="http://192.168.88.128:15672">http://192.168.88.128:15672</a></p></blockquote></li></ol><h2 id="Redis安装部署"><a href="#Redis安装部署" class="headerlink" title="Redis安装部署"></a>Redis安装部署</h2><h3 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h3><ol><li><p>配置EPEL仓库</p><blockquote><p>EPEL 的全称叫 Extra Packages for Enterprise Linux 。EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源。EPEL则为服务器版本提供大量的rpm包(yum程序所使用的程序安装包，类似Windows的exe)，而且大多数rpm包在官方 repository 中是找不到的。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>安装redis</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>启动redis</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># root执行</span><span class="token comment"># 使用systemctl管控，服务名：redis</span>systemctl <span class="token builtin class-name">enable</span> redis<span class="token comment"># 开机自启</span>systemctl disable redis<span class="token comment"># 关闭开机自启</span>systemctl start redis<span class="token comment"># 启动</span>systemctl stop redis<span class="token comment"># 关闭</span>systemctl status redis<span class="token comment"># 查看状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>放行防火墙，redis使用端口号6379</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 方式1（推荐），关闭防火墙</span>systemctl stop firewalld<span class="token comment"># 关闭</span>systemctl disable firewalld<span class="token comment"># 关闭开机自启</span><span class="token comment"># 方式2，放行6379端口</span>firewall-cmd --add-port<span class="token operator">=</span><span class="token number">6379</span>/tcp <span class="token parameter variable">--permanent</span><span class="token comment"># 放行tcp规则下的6379端口，永久生效</span>firewall-cmd <span class="token parameter variable">--reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>进入redis服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#执行redis-cli</span><span class="token punctuation">[</span>root@centos ~<span class="token punctuation">]</span><span class="token comment"># redis-cli</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span>: <span class="token builtin class-name">set</span> mykey helloOK<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span>: get mykey<span class="token string">"hello"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="ElasticSearch安装部署"><a href="#ElasticSearch安装部署" class="headerlink" title="ElasticSearch安装部署"></a>ElasticSearch安装部署</h2><blockquote><p><a href="https://baike.baidu.com/item/全文搜索引擎">全文搜索</a>属于最常见的需求，开源的 <a href="https://www.elastic.co/">Elasticsearch</a> （以下简称 es）是目前全文搜索引擎的首选。</p><p>它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。</p><p>Elasticsearch简称es，在企业内同样是一款应用非常广泛的搜索引擎服务。</p><p>很多服务中的搜索功能，都是基于es来实现的。</p></blockquote><h3 id="安装-6"><a href="#安装-6" class="headerlink" title="安装"></a>安装</h3><ol><li><p>添加yum仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#root执行</span><span class="token comment">#导入仓库密钥</span><span class="token function">rpm</span> <span class="token parameter variable">--import</span> https://artifacts.elastic.co/GPG-KEY-elasticsearch<span class="token comment">#添加yum源</span><span class="token comment">#编辑文件</span><span class="token function">vim</span> /etc/yum.repos.d/elasticsearch.repo<span class="token punctuation">[</span>elasticsearch-7.x<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>Elasticsearch repository <span class="token keyword">for</span> <span class="token number">7</span>.x packages<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://artifacts.elastic.co/packages/7.x/yum<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://artifacts.elastic.co/GPG-KEY-elasticsearch<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">autorefresh</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">type</span><span class="token operator">=</span>rpm-md<span class="token comment"># 更新yum缓存</span>yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>安装es</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置es</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/elasticsearch/elasticsearch.yml<span class="token comment"># 17行，设置集群名称</span>cluster.name: my-cluster<span class="token comment"># 23行，设置节点名称</span>node.name: node-1<span class="token comment"># 56行，允许外网访问</span>network.host: <span class="token number">0.0</span>.0.0<span class="token comment"># 74行，配置集群master节点</span>cluster.initial_master_nodes: <span class="token punctuation">[</span><span class="token string">"node-1"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动es</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start <span class="token operator">|</span> stop <span class="token operator">|</span> status <span class="token operator">|</span> <span class="token builtin class-name">enable</span> <span class="token operator">|</span> disable elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl stop firewalldsystemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>验证</p><blockquote><p>浏览器打开：<a href="https://ip:9200/?pretty">https://ip:9200/?pretty</a></p></blockquote></li></ol><h2 id="集群化环境前置准备"><a href="#集群化环境前置准备" class="headerlink" title="集群化环境前置准备"></a>集群化环境前置准备</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote><p>在前面，我们所学习安装的软件，都是以单机模式运行的。</p><p>后续，我们将要学习大数据相关的软件部署，所以后续我们所安装的软件服务，大多数都是以集群化（多台服务器共同工作）模式运行的。</p><p>所以，在当前小节，我们需要完成集群化环境的前置准备，包括创建多台虚拟机，配置主机名映射，SSH免密登录等等。</p></blockquote><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="配置多台Linux虚拟机"><a href="#配置多台Linux虚拟机" class="headerlink" title="配置多台Linux虚拟机"></a>配置多台Linux虚拟机</h4><blockquote><p>安装集群化软件，首要条件就是要有多台Linux服务器可用。</p><p>我们可以使用VMware提供的克隆功能，将我们的虚拟机额外克隆出3台来使用。</p></blockquote><ol><li><p>首先，关机当前CentOS系统虚拟机（可以使用root用户执行init 0来快速关机）</p></li><li><p>右键VMware虚拟机中的我的计算机点击新建文件夹，并起名为：虚拟机集群</p></li><li><p>右键目前已有的CentOS系统选中管理中的克隆</p><blockquote><ol><li>选择当前状态</li><li>创建完整克隆</li><li>定义名字</li></ol></blockquote></li><li><p>根据上边的操作克隆出林外两台</p></li><li><p>将克隆出来的虚拟机拉入创建好的文件夹中</p></li><li><p>开启第一台克隆，修改主机名为node1,并修改固定ip为：192.168.88.131</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改主机名</span>hostnamectl set-hostname node1<span class="token comment">#修改IP地址</span><span class="token function">vim</span> /etc/sysconfig/network-scripts/ifcfg-ens33<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token string">"192.168.88.131"</span><span class="token comment">#重启网卡</span>systemctl stop networksystemctl start network<span class="token comment">#或者直接</span>systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>同样的操作启动node2和node3</p><blockquote><p>修改node2主机名为node2，设置IP为192.168.88.132</p><p>修改node2主机名为node3，设置IP为192.168.88.133</p></blockquote></li><li><p>配置FinalShell，配置连接到node1、node2、node3的连接</p></li></ol><blockquote><p>为了简单起见，加你配置root用户登录</p></blockquote><h4 id="配置主机名映射"><a href="#配置主机名映射" class="headerlink" title="配置主机名映射"></a>配置主机名映射</h4><ol><li><p>在Windows系统中修改hosts文件，填写如下内容</p><blockquote><p>如果使用的MacOS系统，请：</p><ol><li>sudo su -，切换到root</li><li>修改/etc/hosts文件</li></ol></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.88.131 node1<span class="token number">192.168</span>.88.132 node2<span class="token number">192.168</span>.88.133 node3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>在3台Linux的/etc/hosts文件中，填写如下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.88.131 node1<span class="token number">192.168</span>.88.132 node2<span class="token number">192.168</span>.88.133 node3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="SSH免密登录"><a href="#SSH免密登录" class="headerlink" title="SSH免密登录"></a>SSH免密登录</h4><blockquote><p>SSH服务是一种用于远程登录的安全认证协议。</p><p>我们通过FinalShell远程连接到Linux，就是使用的SSH服务。</p><p>SSH服务支持：</p><ol><li>通过账户+密码的认证方式来做用户认证</li><li>通过账户+秘钥文件的方式做用户认证</li></ol><p>SSH可以让我们通过SSH命令，远程的登陆到其它的主机上，比如：</p><p>在node1执行：ssh root@node2，将以root用户登录node2服务器，输入密码即可成功登陆</p><p>或者ssh node2，将以当前用户直接登陆到node2服务器。</p></blockquote><h5 id="SSH免密配置"><a href="#SSH免密配置" class="headerlink" title="SSH免密配置"></a>SSH免密配置</h5><blockquote><p>后续安装的集群化软件，多数需要远程登录以及远程执行命令，我们可以简单起见，配置三台Linux服务器之间的免密码互相SSH登陆</p></blockquote><ol><li><p>在每台机器上都执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#回车到底，相当于加锁配钥匙</span>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span><span class="token comment">#想当于将配的钥匙分给其他几台机器</span>ssh-copy-id node1ssh-copy-id node2ssh-copy-id node3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置JDK环境</p></li><li><p>关闭防火墙和SELinux</p><blockquote><p>集群化软件之间需要通过端口互相通讯，为了避免出现网络不通的问题，我们可以简单的在集群内部关闭防火墙。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl stop firewalldsystemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Linux有一个安全模块：SELinux，用以限制用户和程序的相关权限，来确保系统的安全稳定。</p><p>SELinux的配置同防火墙一样，非常复杂，课程中不多涉及，后续视情况可以出一章SELinux的配置课程。</p><p>在当前，我们只需要关闭SELinux功能，避免导致后面的软件运行出现问题即可，==在每一台机器都执行==</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/sysconfig/selinux<span class="token comment"># 将第七行，SELINUX=enforcing 改为</span><span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>disabled<span class="token comment"># 保存退出后，重启虚拟机即可，千万要注意disabled单词不要写错，不然无法启动系统</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加快照</p><blockquote><p>为了避免后续出现问题，在完成上述设置后，为==每一台虚拟机==都制作快照，留待使用。</p></blockquote></li></ol><h2 id="Zookeeper集群安装部署"><a href="#Zookeeper集群安装部署" class="headerlink" title="Zookeeper集群安装部署"></a>Zookeeper集群安装部署</h2><blockquote><p>ZooKeeper是一个<a href="https://baike.baidu.com/item/分布式/19276232?fromModule=lemma_inlink">分布式</a>的，开放源码的<a href="https://baike.baidu.com/item/分布式应用程序/9854429?fromModule=lemma_inlink">分布式应用程序</a>协调服务，是Hadoop和<a href="https://baike.baidu.com/item/Hbase/7670213?fromModule=lemma_inlink">Hbase</a>的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p><p>除了为Hadoop和HBase提供协调服务外，Zookeeper也被其它许多软件采用作为其分布式状态一致性的依赖，比如Kafka，又或者一些软件项目中，也经常能见到Zookeeper作为一致性协调服务存在。</p><p>Zookeeper不论是大数据领域亦或是其它服务器开发领域，涉及到分布式状态一致性的场景，总有它的身影存在。</p></blockquote><h3 id="安装-7"><a href="#安装-7" class="headerlink" title="安装"></a>安装</h3><ol><li><p>【node1上操作】下载Zookeeper安装包，并解压</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载</span><span class="token function">wget</span> http://archive.apache.org/dist/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz<span class="token comment"># 确保如下目录存在，不存在就创建</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server<span class="token comment"># 解压</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-zookeeper-3.5.9-bin.tar.gz <span class="token parameter variable">-C</span> /export/server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【node1上操作】创建软链接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>【node1上操作】修改配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#修改文件名</span><span class="token function">mv</span> /export/server/zookeeper/conf/zoo_sample.cfg /export/server/zookeeper/conf/zoo.cfg<span class="token comment">#编辑配置文件</span><span class="token function">vim</span> /export/server/zookeeper/conf/zoo.cfg<span class="token assign-left variable">tickTime</span><span class="token operator">=</span><span class="token number">2000</span><span class="token comment"># zookeeper数据存储目录</span><span class="token assign-left variable">dataDir</span><span class="token operator">=</span>/export/server/zookeeper/data<span class="token assign-left variable">clientPort</span><span class="token operator">=</span><span class="token number">2181</span><span class="token assign-left variable">initLimit</span><span class="token operator">=</span><span class="token number">5</span><span class="token assign-left variable">syncLimit</span><span class="token operator">=</span><span class="token number">2</span><span class="token assign-left variable">server.1</span><span class="token operator">=</span>node1:2888:3888<span class="token assign-left variable">server.2</span><span class="token operator">=</span>node2:2888:3888<span class="token assign-left variable">server.3</span><span class="token operator">=</span>node3:2888:3888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【node1上操作】配置<code>myid</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1. 创建Zookeeper的数据目录</span><span class="token function">mkdir</span> /export/server/zookeeper/data<span class="token comment"># 2. 创建文件，并填入1</span><span class="token function">vim</span> /export/server/zookeeper/data/myid<span class="token comment"># 在文件内填入1即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node2和node3上操作】，创建文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>【node1上操作】将Zookeeper 复制到node2和node3</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /export/server<span class="token function">scp</span> <span class="token parameter variable">-r</span> apache-zookeeper-3.5.9 node2:<span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>/<span class="token function">scp</span> <span class="token parameter variable">-r</span> apache-zookeeper-3.5.9 node3:<span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node2上操作】</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1. 创建软链接</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper<span class="token comment"># 2. 修改myid文件</span><span class="token function">vim</span> /export/server/zookeeper/data/myid<span class="token comment"># 修改内容为2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node3上操作】</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1. 创建软链接</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/apache-zookeeper-3.5.9 /export/server/zookeeper<span class="token comment"># 2. 修改myid文件</span><span class="token function">vim</span> /export/server/zookeeper/data/myid<span class="token comment"># 修改内容为3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node1、node2、node3上分别执行】启动Zookeeper</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动命令</span>/export/server/zookeeper/bin/zkServer.sh start<span class="token comment"># 启动Zookeeper</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>【在node1、node2、node3上分别执行】检查Zookeeper进程是否启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jps<span class="token comment"># 结果中找到有：QuorumPeerMain 进程即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>【node1上操作】验证Zookeeper</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/export/server/zookeeper/bin/zkCli.sh<span class="token comment"># 进入到Zookeeper控制台中后，执行</span><span class="token function">ls</span> /<span class="token comment"># 如无报错即配置成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>至此Zookeeper安装完成</p><h2 id="Kafka集群安装部署"><a href="#Kafka集群安装部署" class="headerlink" title="Kafka集群安装部署"></a>Kafka集群安装部署</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Kafka是一款分布式的、去中心化的、高吞吐低延迟、订阅模式的消息队列系统。</p><p>同RabbitMQ一样，Kafka也是消息队列。不过RabbitMQ多用于后端系统，因其更加专注于消息的延迟和容错。</p><p>Kafka多用于大数据体系，因其更加专注于数据的吞吐能力。</p><p>Kafka多数都是运行在分布式（集群化）模式下，所以课程将以3台服务器，来完成Kafka集群的安装部署。</p><h3 id="安装-8"><a href="#安装-8" class="headerlink" title="安装"></a>安装</h3><ol><li><p>确保已经跟随前面的视频，安装并部署了JDK和Zookeeper服务</p><blockquote><p>Kafka的运行依赖JDK环境和Zookeeper请确保已经有了JDK环境和Zookeeper</p></blockquote></li><li><p>【在node1操作】下载并上传Kafka的安装包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载安装包</span><span class="token function">wget</span> http://archive.apache.org/dist/kafka/2.4.1/kafka_2.12-2.4.1.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>【在node1操作】解压</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /export/server<span class="token comment"># 此文件夹如果不存在需先创建</span><span class="token comment"># 解压</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> kafka_2.12-2.4.1.tgz <span class="token parameter variable">-C</span> /export/server/<span class="token comment"># 创建软链接</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/kafka_2.12-2.4.1 /export/server/kafka<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node1操作】修改Kafka目录内的config目录内的<code>server.properties</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /export/server/kafka/config<span class="token comment"># 指定broker的id</span><span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment"># 指定 kafka的绑定监听的地址</span><span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://node1:9092<span class="token comment"># 指定Kafka数据的位置</span><span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/export/server/kafka/data<span class="token comment"># 指定Zookeeper的三个节点</span><span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span>node1:2181,node2:2181,node3:2181<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node1操作】将node1的kafka复制到node2和node3</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /export/server<span class="token comment"># 复制到node2同名文件夹</span><span class="token function">scp</span> <span class="token parameter variable">-r</span> kafka_2.12-2.4.1 node2:<span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>/<span class="token comment"># 复制到node3同名文件夹</span><span class="token function">scp</span> <span class="token parameter variable">-r</span> kafka_2.12-2.4.1 node3:<span class="token environment constant">$PWD</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node2操作】</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建软链接</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/kafka_2.12-2.4.1 /export/server/kafka<span class="token builtin class-name">cd</span> /export/server/kafka/config<span class="token comment"># 指定broker的id</span><span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">2</span><span class="token comment"># 指定 kafka的绑定监听的地址</span><span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://node2:9092<span class="token comment"># 指定Kafka数据的位置</span><span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/export/server/kafka/data<span class="token comment"># 指定Zookeeper的三个节点</span><span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span>node1:2181,node2:2181,node3:2181<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>【在node3操作】</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建软链接</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /export/server/kafka_2.12-2.4.1 /export/server/kafka<span class="token builtin class-name">cd</span> /export/server/kafka/config<span class="token comment"># 指定broker的id</span><span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">3</span><span class="token comment"># 指定 kafka的绑定监听的地址</span><span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://node3:9092<span class="token comment"># 指定Kafka数据的位置</span><span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/export/server/kafka/data<span class="token comment"># 指定Zookeeper的三个节点</span><span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span>node1:2181,node2:2181,node3:2181<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动kafka</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 请先确保Zookeeper已经启动了</span><span class="token comment"># 方式1：【前台启动】分别在node1、2、3上执行如下语句</span>/export/server/kafka/bin/kafka-server-start.sh /export/server/kafka/config/server.properties<span class="token comment"># 方式2：【后台启动】分别在node1、2、3上执行如下语句</span><span class="token function">nohup</span> /export/server/kafka/bin/kafka-server-start.sh/export/server/kafka/config/server.properties <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">>></span> /export/server/kafka/kafka-server.log <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>验证Kafka启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在每一台服务器执行</span>jps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="测试Kafka能否正常使用"><a href="#测试Kafka能否正常使用" class="headerlink" title="测试Kafka能否正常使用"></a>测试Kafka能否正常使用</h3><ol><li>创建测试主题</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在node1执行，创建一个主题</span>/export/server/kafka_2.12-2.4.1/bin/kafka-topics.sh <span class="token parameter variable">--create</span> <span class="token parameter variable">--zookeeper</span> node1:2181 --replication-factor <span class="token number">1</span> <span class="token parameter variable">--partitions</span> <span class="token number">3</span> <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li>运行测试，请在FinalShell中打开2个node1的终端页面</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 打开一个终端页面，启动一个模拟的数据生产者</span>/export/server/kafka_2.12-2.4.1/bin/kafka-console-producer.sh --broker-list node1:9092 <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span><span class="token comment"># 再打开一个新的终端页面，在启动一个模拟的数据消费者</span>/export/server/kafka_2.12-2.4.1/bin/kafka-console-consumer.sh --bootstrap-server node1:9092 <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span> --from-beginning<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建PicGo+Gitee+typora图床</title>
      <link href="/posts/4c53959b.html"/>
      <url>/posts/4c53959b.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建PicGo-Gitee-typora图床"><a href="#搭建PicGo-Gitee-typora图床" class="headerlink" title="搭建PicGo+Gitee+typora图床"></a>搭建PicGo+Gitee+typora图床</h1><blockquote><p>使用gitee+picgo+typora搭建图床</p><p>注意：以此搭建的图床是公开的，也就是说其他人可以通过查看你公开的代码仓库查看图片，自用用来记录自己的学习笔记可以使用</p></blockquote><h2 id="1-创建gitee图床仓库"><a href="#1-创建gitee图床仓库" class="headerlink" title="1. 创建gitee图床仓库"></a>1. 创建gitee图床仓库</h2><blockquote><p>提前准备：</p><p>gitee账号（gitee网址：www.gitee.com）</p></blockquote><ol><li>新建仓库</li></ol><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/1.png" alt="image-20240222135400191"></p><ol><li>新建仓库进行如下配置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/5.png" alt="image-20240222140000751"></p><ol><li>创建成功界面如下图所示，并初始化readme文件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/2.png" alt="image-20240222140223533"></p><ol><li>设置私人令牌</li></ol><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/4.png" alt="image-20240222141043163"></p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/3.png" alt="image-20240222141227063"></p><ul><li>选中全选进行提交，会验证密码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/6.png" alt="image-20240222143404182"></p><ul><li><p>提交后会生成一个token，复制保存</p><blockquote><p>后续配置PicGo时需要使用，一定要保存，因为只有第一次可以看到明文的token</p></blockquote></li></ul><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/8.png" alt="image-20240222144028511"></p><p>5.私人令牌配置好的界面如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/9.png" alt="image-20240222144310123"></p><h2 id="2-下载安装PicGo"><a href="#2-下载安装PicGo" class="headerlink" title="2.下载安装PicGo"></a>2.下载安装PicGo</h2><blockquote><p>提前准备：node.js</p><p>node.js下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p>建议下载左侧长期维护版本</p></blockquote><ul><li><p>下载安装node.js</p><ol><li><p>node.js下载</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/10.png" alt="image-20240222151256381"></p></li><li><p>下载完成后傻瓜式安装所有选项默认即可</p></li><li><p>安装完成后在cmd中使用如下命令进行验证</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#验证命令</span><span class="token function">node</span> <span class="token parameter variable">--version</span><span class="token function">npm</span> <span class="token parameter variable">-version</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>验证结果如下</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/11.png" alt="image-20240222151909540"></p><blockquote><p>如果没有显示如上结果，可以检查一下环境变量是否配置</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/12.png" alt="image-20240222154855103"></p></blockquote></li><li><p>node.js优化配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置淘宝镜像源</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com<span class="token comment">#配置全局仓库地址（在本地创建node_global文件夹用来作为全局仓库，文件夹位置按照自己想要存放的位置来就可以）</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix node_global地址<span class="token comment">#配置全局缓存地址（在本地创建node_cache文件夹用来作为全局缓存，文件夹位置按照自己想要存放的位置来就可以）</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache node_cache地址<span class="token comment">#查看配置</span><span class="token function">npm</span> config <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我的配置如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/13.png" alt="image-20240222153850756"></p></li></ol></li><li><p>下载安装PicGo</p></li></ul><ol><li><p>下载安装</p><blockquote><p>PicGo下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p>下载完成后按步骤默认安装即可，安装路径根据自己需要更改</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/14.png" alt="image-20240222155412883"></p><p>安装完成打开界面如下</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/15.png" alt="image-20240222155935690"></p></li><li><p>基础配置</p><ul><li><p>配置镜像地址</p><blockquote><p>配置镜像地址主要是为之后插件下载提供帮助，默认的镜像地址容易出现插件下载不下来的问题，因此提前配置淘宝镜像下载地址</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/16.png" alt="image-20240222160651746"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#配置淘宝镜像</span>https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/17.png" alt="image-20240222161025952"></p></li><li><p>配置Server</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/18.png" alt="image-20240222161440333"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#设置监听地址</span><span class="token number">127.0</span>.0.1<span class="token comment">#设置监听端口</span><span class="token number">36677</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/19.png" alt="image-20240222161703266"></p></li><li><p>其他设置</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/27.png" alt="image-20240222162154384"></p></li></ul></li><li><p>插件下载以及配置</p><ul><li><p>插件下载</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/20.png" alt="image-20240222162559936"></p></li><li><p>插件配置</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/21.png" alt="image-20240222163537755"></p></li></ul></li></ol><pre><code> &gt; repo：填写gitee仓库名 &gt; branch:图片上传的分支（新建的仓库默认分支为master） &gt; token：填写gitee配置的私人令牌（token） &gt; path:填写保存到仓库中的位置（此处我创建了一个img文件夹用来专门保存） &gt;</code></pre><blockquote><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/202402270224906.png" alt="202402252036909"></p></blockquote><ol><li><p>图床设置</p><blockquote><p>一般来说在插件配置完成后此处会同步更新</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/22.png" alt="image-20240222165024712"></p></li><li><p>上传区设置</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/23.png" alt="image-20240222165605957"></p></li></ol><h2 id="3-下载安装typora"><a href="#3-下载安装typora" class="headerlink" title="3.下载安装typora"></a>3.下载安装typora</h2><ul><li><p>下载安装Typora</p><blockquote><p>下载地址：<a href="https://typoraio.cn/">Typora 官方中文站 (typoraio.cn)</a></p><p>注意：Typora是用来编辑Markdown文档的软件，1.0以后的版本是收费的，如果有需要可以找一下1.0之前的版本但是版本最好控制在<strong>0.9.96</strong>及以上的版本</p><p>安装也是傻瓜式安装，一路点击下一步有需要可以切换一下安装路径</p></blockquote></li><li><p>配置PicGo上传</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/24.png" alt="image-20240222171001238"></p><blockquote><p>设置图像模块下的上传服务设定</p><p>上传服务：选择PicGo(app)</p><p>PicGo路径：填写自己电脑上PicGo的安装路径（不要填写图片上的路径，图片路径为我自己软件安装路径）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/25.png" alt="image-20240222171528456"></p></li><li><p>验证成功结果</p><p><img src="https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/26.png" alt="上传成功图片"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>日常生活</title>
      <link href="/posts/be99bbe6.html"/>
      <url>/posts/be99bbe6.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"莫若MOYANRU`Blog","short_name":"莫若MOYANRU","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {  font-family: ZhuZiAYuanJWD;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);  font-display: swap;  font-weight: lighter;}div#menus {  font-family: "ZhuZiAYuanJWD";}h1#site-title {  font-family: ZhuZiAYuanJWD;  font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {  font-family: ZhuZiAYuanJWD;}.iconfont {  font-family: "iconfont" !important;  font-size: 3em;  /* 可以定义图标大小 */  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {  /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */  width: 1em;  height: 1em;  /* width和height定义图标的默认宽度和高度*/  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}.icon-zhongbiao::before {  color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {  background: var(--anzhiyu-theme);  color: var(--anzhiyu-ahoverbg);  border-radius: 10px;}a.bangumi-tab:hover {  text-decoration: none !important;}.bangumi-button:hover {  background: var(--anzhiyu-theme) !important;  border-radius: 10px !important;  color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {  text-decoration: none !important;}.bangumi-button {  padding: 5px 10px !important;}a.bangumi-tab {  padding: 5px 10px !important;}svg.icon.faa-tada {  font-size: 1.1em;}.bangumi-info-item {  border-right: 1px solid #f2b94b;}.bangumi-info-item span {  color: #f2b94b;}.bangumi-info-item em {  color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource > svg {  width: 1.19em;  height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {  background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {  background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {  background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {  background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {  background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {  background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts > .recent-post-item {  background: #121212;}[data-theme="dark"] .card-widget {  background: #121212 !important;}[data-theme="dark"] div#post {  background: #121212 !important;}[data-theme="dark"] div#tag {  background: #121212 !important;}[data-theme="dark"] div#archive {  background: #121212 !important;}[data-theme="dark"] div#page {  background: #121212 !important;}[data-theme="dark"] div#category {  background: #121212 !important;}[data-theme="dark"] div#category {  background: transparent !important;}/* 页脚透明 */#footer {  background: transparent !important;}/* 头图透明 */#page-header {  background: transparent !important;}#rightside > div > button {  border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {  width: 10px;  height: 10px;}::-webkit-scrollbar-thumb {  background-color: #3b70fc;  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  transition: all 0.3s;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  transition: all 0.3s;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {  z-index: 999999 !important;}/* 评论框  */.vwrap {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {  text-decoration: none !important;}#article-container #hpp_talk p img {  display: inline;}/* 404页面 */#error-wrap {  position: absolute;  top: 40%;  right: 0;  left: 0;  margin: 0 auto;  padding: 0 1rem;  max-width: 1000px;  transform: translate(0, -50%);}#error-wrap .error-content {  display: flex;  flex-direction: row;  justify-content: center;  align-items: center;  margin: 0 1rem;  height: 18rem;  border-radius: 8px;  background: var(--card-bg);  box-shadow: var(--card-box-shadow);  transition: all 0.3s;}#error-wrap .error-content .error-img {  box-flex: 1;  flex: 1;  height: 100%;  border-top-left-radius: 8px;  border-bottom-left-radius: 8px;  background-color: #3b70fc;  background-position: center;  background-size: cover;}#error-wrap .error-content .error-info {  box-flex: 1;  flex: 1;  padding: 0.5rem;  text-align: center;  font-size: 14px;  font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {  margin-top: -4rem;  font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {  margin-top: -3.5rem;  word-break: break-word;  font-size: 1.6em;}#error-wrap .error-content .error-info a {  display: inline-block;  margin-top: 0.5rem;  padding: 0.3rem 1.5rem;  background: var(--btn-bg);  color: var(--btn-color);}#body-wrap.error .aside-list {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  bottom: 0px;  position: absolute;  padding: 1rem;  width: 100%;  overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  max-width: 1200px;  margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {  padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {  width: 100%;  object-fit: cover;  border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {  overflow: hidden;  width: 230px;  height: 143px;  background: var(--anzhiyu-card-bg);  display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  color: white;}#home_top {  margin: 1rem auto 0;  padding: 0px 15px;  max-width: 1450px;  width: 100%;}#body-wrap.error .aside-list .aside-list-item .content time {  display: none;}/* 代码框主题 */#article-container figure.highlight {  border-radius: 10px;}.loading-img {  background: url(https://cdn.jsdelivr.net/gh/chenxiancen/ImgPicGo/blogimg/avatar.jpg) no-repeat center center;  background-size: cover;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 10px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 4rem;  background: #eaecf2;  border: 1px #e3e8f7;  overflow: hidden;}.pace-inactive .pace-progress {  opacity: 0;  transition: 0.3s ease-in;}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: absolute;  z-index: 2000;  display: block;  top: 0;  right: 100%;  height: 100%;  width: 100%;  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);  animation: gradient 1.5s ease infinite;  background-size: 200%;}.pace.pace-inactive {  opacity: 0;  transition: 0.3s;  top: -8px;}@keyframes gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {  var l,    h,    a,    t,    i,    v =      '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',    o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),    p = function (c, l) {      l.parentNode.insertBefore(c, l);    };  if (o && !c.__iconfont__svg__cssinject__) {    c.__iconfont__svg__cssinject__ = !0;    try {      document.write(        "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"      );    } catch (c) {      console && console.log(c);    }  }  function d() {    i || ((i = !0), a());  }  function m() {    try {      t.documentElement.doScroll("left");    } catch (c) {      return void setTimeout(m, 50);    }    d();  }  (l = function () {    var c,      l = document.createElement("div");    (l.innerHTML = v),      (v = null),      (l = l.getElementsByTagName("svg")[0]) &&        (l.setAttribute("aria-hidden", "true"),        (l.style.position = "absolute"),        (l.style.width = 0),        (l.style.height = 0),        (l.style.overflow = "hidden"),        (l = l),        (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));  }),    document.addEventListener      ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)        ? setTimeout(l, 0)        : ((h = function () {            document.removeEventListener("DOMContentLoaded", h, !1), l();          }),          document.addEventListener("DOMContentLoaded", h, !1))      : document.attachEvent &&        ((a = l),        (t = c.document),        (i = !1),        m(),        (t.onreadystatechange = function () {          "complete" == t.readyState && ((t.onreadystatechange = null), d());        }));})(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/coin/coin.css"/>
      <url>/css/coin/coin.css</url>
      
        <content type="html"><![CDATA[.tip-button {  border: 0;  border-radius: 0.25rem;  cursor: pointer;  font-size: 20px;  font-weight: 600;  height: 2.6rem;  margin-bottom: -4rem;  outline: 0;  position: relative;  top: 0;  transform-origin: 0% 100%;  transition: transform 50ms ease-in-out;  width: auto;  -webkit-tap-highlight-color: transparent;}.tip-button:active {  transform: rotate(4deg);}.tip-button.clicked {  animation: 150ms ease-in-out 1 shake;  pointer-events: none;}.tip-button.clicked .tip-button__text {  opacity: 0;  transition: opacity 100ms linear 200ms;}.tip-button.clicked::before {  height: 0.5rem;  width: 60%;  background: $button-hover-color;}.tip-button.clicked .coin {  transition: margin-bottom 1s linear 200ms;  margin-bottom: 0;}.tip-button.shrink-landing::before {  transition: width 200ms ease-in;  width: 0;}.tip-button.coin-landed::after {  opacity: 1;  transform: scale(1);  transform-origin: 50% 100%;}.tip-button.coin-landed .coin-wrapper {  background: radial-gradient(circle at 35% 97%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(      circle at 45% 92%,      rgba(3, 16, 50, 0.4) 0.04rem,      transparent 0.02rem    ), radial-gradient(circle at 55% 98%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(circle at        65% 96%, rgba(3, 16, 50, 0.4) 0.06rem, transparent 0.06rem);  background-position: center bottom;  background-size: 100%;  bottom: -1rem;  opacity: 0;  transform: scale(2) translateY(-10px);}.tip-button__text {  color: #fff;  margin-right: 1.8rem;  opacity: 1;  position: relative;  transition: opacity 100ms linear 500ms;  z-index: 3;}.tip-button::before {  border-radius: 0.25rem;  bottom: 0;  content: "";  display: block;  height: 100%;  left: 50%;  position: absolute;  transform: translateX(-50%);  transition: height 250ms ease-in-out 400ms, width 250ms ease-in-out 300ms;  width: 100%;  z-index: 2;}.tip-button::after {  bottom: -1rem;  color: white;  content: "ヾ(≧O≦)〃嗷~"; /*点击后显示的内容*/  height: 110%;  left: 0;  opacity: 0;  position: absolute;  pointer-events: none;  text-align: center;  transform: scale(0);  transform-origin: 50% 20%;  transition: transform 200ms cubic-bezier(0, 0, 0.35, 1.43);  width: 100%;  z-index: 1;}.coin-wrapper {  background: none;  bottom: 0;  height: 18rem;  left: 0;  opacity: 1;  overflow: hidden;  pointer-events: none;  position: absolute;  transform: none;  transform-origin: 50% 100%;  transition: opacity 200ms linear 100ms, transform 300ms ease-out;  width: 100%;}.coin {  --front-y-multiplier: 0;  --back-y-multiplier: 0;  --coin-y-multiplier: 0;  --coin-x-multiplier: 0;  --coin-scale-multiplier: 0;  --coin-rotation-multiplier: 0;  --shine-opacity-multiplier: 0.4;  --shine-bg-multiplier: 50%;  bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);  height: 3.5rem;  margin-bottom: 3.05rem;  position: absolute;  right: calc(var(--coin-x-multiplier) * 34% + 16%);  transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(            --coin-rotation-multiplier          ) * -1deg));  transition: opacity 100ms linear 200ms;  width: 3.5rem;  z-index: 3;}.coin__front,.coin__middle,.coin__back,.coin::before,.coin__front::after,.coin__back::after {  border-radius: 50%;  box-sizing: border-box;  height: 100%;  left: 0;  position: absolute;  width: 100%;  z-index: 3;}.coin__front {  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),    linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%),    linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(      to bottom,      #fcfaf9 44%,      transparent 44%,      transparent 65%,      #fcfaf9 65%,      #fcfaf9 71%,      #8590b3 71%    ), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9        47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent        72%);  background-color: #8590b3;  background-size: 100% 100%;  transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));}.coin__front::after {  background: rgba(0, 0, 0, 0.2);  content: "";  opacity: var(--front-y-multiplier);}.coin__middle {  background: #737c99;  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));}.coin__back {  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),    radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent        35%);  background-color: #8590b3;  background-size: 100% 100%;  transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));}.coin__back::after {  background: rgba(0, 0, 0, 0.2);  content: "";  opacity: var(--back-y-multiplier);}.coin::before {  background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent        calc(var(--shine-bg-multiplier) + 0%), #e9f4ff calc(var(--shine-bg-multiplier) + 0%), transparent calc(var(              --shine-bg-multiplier            ) + 50%));  content: "";  opacity: var(--shine-opacity-multiplier);  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier))    rotate(calc(var(--coin-rotation-multiplier) * 1deg));  z-index: 10;}.coin::after {  background: #737c99;  content: "";  height: 0.3181818182rem;  left: 0;  position: absolute;  top: 50%;  transform: translateY(-50%);  width: 100%;  z-index: 2;}@keyframes shake {  0% {    transform: rotate(4deg);  }  66% {    transform: rotate(-4deg);  }  100% {    transform: rotate();  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/coin/coin.js"/>
      <url>/js/coin/coin.js</url>
      
        <content type="html"><![CDATA[var tipButtons = document.querySelectorAll(".tip-button");function coinAudio() {  var coinAudio = document.getElementById("coinAudio");  if (coinAudio) {    coinAudio.play(); //有音频时播放  }}// Loop through all buttons (allows for multiple buttons on page)tipButtons.forEach(button => {  var coin = button.querySelector(".coin");  // The larger the number, the slower the animation  coin.maxMoveLoopCount = 90;  button.addEventListener("click", () => {    if (/Android|webOS|BlackBerry/i.test(navigator.userAgent)) return true; //媒体选择    if (button.clicked) return;    button.classList.add("clicked");    // Wait to start flipping th coin because of the button tilt animation    setTimeout(() => {      // Randomize the flipping speeds just for fun      coin.sideRotationCount = Math.floor(Math.random() * 5) * 90;      coin.maxFlipAngle = (Math.floor(Math.random() * 4) + 3) * Math.PI;      button.clicked = true;      flipCoin();      coinAudio();    }, 50);  });  var flipCoin = () => {    coin.moveLoopCount = 0;    flipCoinLoop();  };  var resetCoin = () => {    coin.style.setProperty("--coin-x-multiplier", 0);    coin.style.setProperty("--coin-scale-multiplier", 0);    coin.style.setProperty("--coin-rotation-multiplier", 0);    coin.style.setProperty("--shine-opacity-multiplier", 0.4);    coin.style.setProperty("--shine-bg-multiplier", "50%");    coin.style.setProperty("opacity", 1);    // Delay to give the reset animation some time before you can click again    setTimeout(() => {      button.clicked = false;    }, 300);  };  var flipCoinLoop = () => {    coin.moveLoopCount++;    var percentageCompleted = coin.moveLoopCount / coin.maxMoveLoopCount;    coin.angle = -coin.maxFlipAngle * Math.pow(percentageCompleted - 1, 2) + coin.maxFlipAngle;    // Calculate the scale and position of the coin moving through the air    coin.style.setProperty("--coin-y-multiplier", -11 * Math.pow(percentageCompleted * 2 - 1, 4) + 11);    coin.style.setProperty("--coin-x-multiplier", percentageCompleted);    coin.style.setProperty("--coin-scale-multiplier", percentageCompleted * 0.6);    coin.style.setProperty("--coin-rotation-multiplier", percentageCompleted * coin.sideRotationCount);    // Calculate the scale and position values for the different coin faces    // The math uses sin/cos wave functions to similate the circular motion of 3D spin    coin.style.setProperty("--front-scale-multiplier", Math.max(Math.cos(coin.angle), 0));    coin.style.setProperty("--front-y-multiplier", Math.sin(coin.angle));    coin.style.setProperty("--middle-scale-multiplier", Math.abs(Math.cos(coin.angle), 0));    coin.style.setProperty("--middle-y-multiplier", Math.cos((coin.angle + Math.PI / 2) % Math.PI));    coin.style.setProperty("--back-scale-multiplier", Math.max(Math.cos(coin.angle - Math.PI), 0));    coin.style.setProperty("--back-y-multiplier", Math.sin(coin.angle - Math.PI));    coin.style.setProperty("--shine-opacity-multiplier", 4 * Math.sin((coin.angle + Math.PI / 2) % Math.PI) - 3.2);    coin.style.setProperty("--shine-bg-multiplier", -40 * (Math.cos((coin.angle + Math.PI / 2) % Math.PI) - 0.5) + "%");    // Repeat animation loop    if (coin.moveLoopCount < coin.maxMoveLoopCount) {      if (coin.moveLoopCount === coin.maxMoveLoopCount - 6) button.classList.add("shrink-landing");      window.requestAnimationFrame(flipCoinLoop);    } else {      button.classList.add("coin-landed");      coin.style.setProperty("opacity", 0);      setTimeout(() => {        button.classList.remove("clicked", "shrink-landing", "coin-landed");        setTimeout(() => {          resetCoin();        }, 300);      }, 1500);    }  };});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var grt = new Date('10/28/2023 16:11:00');  now.setTime(now.getTime() + 250);  var days = (now - grt) / 1e3 / 60 / 60 / 24,    dnum = Math.floor(days),    hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,    hnum = Math.floor(hours);  1 == String(hnum).length && (hnum = '0' + hnum);  var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,    mnum = Math.floor(minutes);  1 == String(mnum).length && (mnum = '0' + mnum);  var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,    snum = Math.round(seconds);  1 == String(snum).length && (snum = '0' + snum);  let currentTimeHtml = '';  (currentTimeHtml =    hnum < 18 && hnum >= 9      ? `<img class='boardsign' src='/img/莫若MOYANRU-上班摸鱼中.svg' title='距离月入100k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<img class='boardsign' src='/img/莫若MOYANRU-下班了.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById('workboard') && (document.getElementById('workboard').innerHTML = currentTimeHtml);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){var grt=new Date("10/28/2023 16:11:00");now.setTime(now.getTime()+250);var days=(now-grt)/1e3/60/60/24,dnum=Math.floor(days),hours=(now-grt)/1e3/60/60-24*dnum,hnum=Math.floor(hours);1==String(hnum).length&&(hnum="0"+hnum);var minutes=(now-grt)/1e3/60-1440*dnum-60*hnum,mnum=Math.floor(minutes);1==String(mnum).length&&(mnum="0"+mnum);var seconds=(now-grt)/1e3-86400*dnum-3600*hnum-60*mnum,snum=Math.round(seconds);1==String(snum).length&&(snum="0"+snum);let currentTimeHtml="";currentTimeHtml=hnum<18&&hnum>=9?`<img class='boardsign' src='/img/莫若MOYANRU-上班摸鱼中.svg' title='距离月入100k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`:`<img class='boardsign' src='/img/莫若MOYANRU-下班了.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=currentTimeHtml)}setInterval(()=>{createtime()},250);]]></content>
      
    </entry>
    
    
  
</search>
